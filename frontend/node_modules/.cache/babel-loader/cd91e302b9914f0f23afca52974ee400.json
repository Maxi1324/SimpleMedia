{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\"; // we need some empty interfaces to show up in docs\n// HACKHACK: these components should go in separate files\n\n/* eslint-disable max-classes-per-file, @typescript-eslint/no-empty-interface */\n\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, refHandler } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n/**\n * Renders common control elements, with additional props to customize appearance.\n * This component is not exported and is only used in this file for `Checkbox`, `Radio`, and `Switch` below.\n */\n\nvar Control = function (_a) {\n  var _b;\n\n  var alignIndicator = _a.alignIndicator,\n      children = _a.children,\n      className = _a.className,\n      indicatorChildren = _a.indicatorChildren,\n      inline = _a.inline,\n      inputRef = _a.inputRef,\n      label = _a.label,\n      labelElement = _a.labelElement,\n      large = _a.large,\n      style = _a.style,\n      type = _a.type,\n      typeClassName = _a.typeClassName,\n      _c = _a.tagName,\n      tagName = _c === void 0 ? \"label\" : _c,\n      htmlProps = __rest(_a, [\"alignIndicator\", \"children\", \"className\", \"indicatorChildren\", \"inline\", \"inputRef\", \"label\", \"labelElement\", \"large\", \"style\", \"type\", \"typeClassName\", \"tagName\"]);\n\n  var classes = classNames(Classes.CONTROL, typeClassName, (_b = {}, _b[Classes.DISABLED] = htmlProps.disabled, _b[Classes.INLINE] = inline, _b[Classes.LARGE] = large, _b), Classes.alignmentClass(alignIndicator), className);\n  return React.createElement(tagName, {\n    className: classes,\n    style: style\n  }, React.createElement(\"input\", __assign({}, htmlProps, {\n    ref: inputRef,\n    type: type\n  })), React.createElement(\"span\", {\n    className: Classes.CONTROL_INDICATOR\n  }, indicatorChildren), label, labelElement, children);\n};\n\nvar Switch =\n/** @class */\nfunction (_super) {\n  __extends(Switch, _super);\n\n  function Switch() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Switch.prototype.render = function () {\n    var _a = this.props,\n        innerLabelChecked = _a.innerLabelChecked,\n        innerLabel = _a.innerLabel,\n        controlProps = __rest(_a, [\"innerLabelChecked\", \"innerLabel\"]);\n\n    var switchLabels = innerLabel || innerLabelChecked ? [React.createElement(\"div\", {\n      key: \"checked\",\n      className: Classes.CONTROL_INDICATOR_CHILD\n    }, React.createElement(\"div\", {\n      className: Classes.SWITCH_INNER_TEXT\n    }, innerLabelChecked ? innerLabelChecked : innerLabel)), React.createElement(\"div\", {\n      key: \"unchecked\",\n      className: Classes.CONTROL_INDICATOR_CHILD\n    }, React.createElement(\"div\", {\n      className: Classes.SWITCH_INNER_TEXT\n    }, innerLabel))] : null;\n    return React.createElement(Control, __assign({}, controlProps, {\n      type: \"checkbox\",\n      typeClassName: Classes.SWITCH,\n      indicatorChildren: switchLabels\n    }));\n  };\n\n  Switch.displayName = DISPLAYNAME_PREFIX + \".Switch\";\n  Switch = __decorate([polyfill], Switch);\n  return Switch;\n}(AbstractPureComponent2);\n\nexport { Switch };\n\nvar Radio =\n/** @class */\nfunction (_super) {\n  __extends(Radio, _super);\n\n  function Radio() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Radio.prototype.render = function () {\n    return React.createElement(Control, __assign({}, this.props, {\n      type: \"radio\",\n      typeClassName: Classes.RADIO\n    }));\n  };\n\n  Radio.displayName = DISPLAYNAME_PREFIX + \".Radio\";\n  Radio = __decorate([polyfill], Radio);\n  return Radio;\n}(AbstractPureComponent2);\n\nexport { Radio };\n\nvar Checkbox =\n/** @class */\nfunction (_super) {\n  __extends(Checkbox, _super);\n\n  function Checkbox() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      indeterminate: _this.props.indeterminate || _this.props.defaultIndeterminate || false\n    }; // must maintain internal reference for `indeterminate` support\n\n    _this.input = null;\n    _this.handleInputRef = refHandler(_this, \"input\", _this.props.inputRef);\n\n    _this.handleChange = function (evt) {\n      var _a, _b;\n\n      var indeterminate = evt.target.indeterminate; // update state immediately only if uncontrolled\n\n      if (_this.props.indeterminate == null) {\n        _this.setState({\n          indeterminate: indeterminate\n        });\n      } // otherwise wait for props change. always invoke handler.\n\n\n      (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, evt);\n    };\n\n    return _this;\n  }\n\n  Checkbox.getDerivedStateFromProps = function (_a) {\n    var indeterminate = _a.indeterminate; // put props into state if controlled by props\n\n    if (indeterminate != null) {\n      return {\n        indeterminate: indeterminate\n      };\n    }\n\n    return null;\n  };\n\n  Checkbox.prototype.render = function () {\n    var _a = this.props,\n        defaultIndeterminate = _a.defaultIndeterminate,\n        indeterminate = _a.indeterminate,\n        controlProps = __rest(_a, [\"defaultIndeterminate\", \"indeterminate\"]);\n\n    return React.createElement(Control, __assign({}, controlProps, {\n      inputRef: this.handleInputRef,\n      onChange: this.handleChange,\n      type: \"checkbox\",\n      typeClassName: Classes.CHECKBOX\n    }));\n  };\n\n  Checkbox.prototype.componentDidMount = function () {\n    this.updateIndeterminate();\n  };\n\n  Checkbox.prototype.componentDidUpdate = function () {\n    this.updateIndeterminate();\n  };\n\n  Checkbox.prototype.updateIndeterminate = function () {\n    if (this.input != null) {\n      this.input.indeterminate = this.state.indeterminate;\n    }\n  };\n\n  Checkbox.displayName = DISPLAYNAME_PREFIX + \".Checkbox\";\n  Checkbox = __decorate([polyfill], Checkbox);\n  return Checkbox;\n}(AbstractPureComponent2);\n\nexport { Checkbox };","map":{"version":3,"sources":["../../../../src/components/forms/controls.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\n// we need some empty interfaces to show up in docs\n// HACKHACK: these components should go in separate files\n/* eslint-disable max-classes-per-file, @typescript-eslint/no-empty-interface */\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, refHandler } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n/**\n * Renders common control elements, with additional props to customize appearance.\n * This component is not exported and is only used in this file for `Checkbox`, `Radio`, and `Switch` below.\n */\nvar Control = function (_a) {\n    var _b;\n    var alignIndicator = _a.alignIndicator, children = _a.children, className = _a.className, indicatorChildren = _a.indicatorChildren, inline = _a.inline, inputRef = _a.inputRef, label = _a.label, labelElement = _a.labelElement, large = _a.large, style = _a.style, type = _a.type, typeClassName = _a.typeClassName, _c = _a.tagName, tagName = _c === void 0 ? \"label\" : _c, htmlProps = __rest(_a, [\"alignIndicator\", \"children\", \"className\", \"indicatorChildren\", \"inline\", \"inputRef\", \"label\", \"labelElement\", \"large\", \"style\", \"type\", \"typeClassName\", \"tagName\"]);\n    var classes = classNames(Classes.CONTROL, typeClassName, (_b = {},\n        _b[Classes.DISABLED] = htmlProps.disabled,\n        _b[Classes.INLINE] = inline,\n        _b[Classes.LARGE] = large,\n        _b), Classes.alignmentClass(alignIndicator), className);\n    return React.createElement(tagName, { className: classes, style: style }, React.createElement(\"input\", __assign({}, htmlProps, { ref: inputRef, type: type })), React.createElement(\"span\", { className: Classes.CONTROL_INDICATOR }, indicatorChildren), label, labelElement, children);\n};\nvar Switch = /** @class */ (function (_super) {\n    __extends(Switch, _super);\n    function Switch() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Switch.prototype.render = function () {\n        var _a = this.props, innerLabelChecked = _a.innerLabelChecked, innerLabel = _a.innerLabel, controlProps = __rest(_a, [\"innerLabelChecked\", \"innerLabel\"]);\n        var switchLabels = innerLabel || innerLabelChecked\n            ? [\n                React.createElement(\"div\", { key: \"checked\", className: Classes.CONTROL_INDICATOR_CHILD },\n                    React.createElement(\"div\", { className: Classes.SWITCH_INNER_TEXT }, innerLabelChecked ? innerLabelChecked : innerLabel)),\n                React.createElement(\"div\", { key: \"unchecked\", className: Classes.CONTROL_INDICATOR_CHILD },\n                    React.createElement(\"div\", { className: Classes.SWITCH_INNER_TEXT }, innerLabel)),\n            ]\n            : null;\n        return (React.createElement(Control, __assign({}, controlProps, { type: \"checkbox\", typeClassName: Classes.SWITCH, indicatorChildren: switchLabels })));\n    };\n    Switch.displayName = DISPLAYNAME_PREFIX + \".Switch\";\n    Switch = __decorate([\n        polyfill\n    ], Switch);\n    return Switch;\n}(AbstractPureComponent2));\nexport { Switch };\nvar Radio = /** @class */ (function (_super) {\n    __extends(Radio, _super);\n    function Radio() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Radio.prototype.render = function () {\n        return React.createElement(Control, __assign({}, this.props, { type: \"radio\", typeClassName: Classes.RADIO }));\n    };\n    Radio.displayName = DISPLAYNAME_PREFIX + \".Radio\";\n    Radio = __decorate([\n        polyfill\n    ], Radio);\n    return Radio;\n}(AbstractPureComponent2));\nexport { Radio };\nvar Checkbox = /** @class */ (function (_super) {\n    __extends(Checkbox, _super);\n    function Checkbox() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            indeterminate: _this.props.indeterminate || _this.props.defaultIndeterminate || false,\n        };\n        // must maintain internal reference for `indeterminate` support\n        _this.input = null;\n        _this.handleInputRef = refHandler(_this, \"input\", _this.props.inputRef);\n        _this.handleChange = function (evt) {\n            var _a, _b;\n            var indeterminate = evt.target.indeterminate;\n            // update state immediately only if uncontrolled\n            if (_this.props.indeterminate == null) {\n                _this.setState({ indeterminate: indeterminate });\n            }\n            // otherwise wait for props change. always invoke handler.\n            (_b = (_a = _this.props).onChange) === null || _b === void 0 ? void 0 : _b.call(_a, evt);\n        };\n        return _this;\n    }\n    Checkbox.getDerivedStateFromProps = function (_a) {\n        var indeterminate = _a.indeterminate;\n        // put props into state if controlled by props\n        if (indeterminate != null) {\n            return { indeterminate: indeterminate };\n        }\n        return null;\n    };\n    Checkbox.prototype.render = function () {\n        var _a = this.props, defaultIndeterminate = _a.defaultIndeterminate, indeterminate = _a.indeterminate, controlProps = __rest(_a, [\"defaultIndeterminate\", \"indeterminate\"]);\n        return (React.createElement(Control, __assign({}, controlProps, { inputRef: this.handleInputRef, onChange: this.handleChange, type: \"checkbox\", typeClassName: Classes.CHECKBOX })));\n    };\n    Checkbox.prototype.componentDidMount = function () {\n        this.updateIndeterminate();\n    };\n    Checkbox.prototype.componentDidUpdate = function () {\n        this.updateIndeterminate();\n    };\n    Checkbox.prototype.updateIndeterminate = function () {\n        if (this.input != null) {\n            this.input.indeterminate = this.state.indeterminate;\n        }\n    };\n    Checkbox.displayName = DISPLAYNAME_PREFIX + \".Checkbox\";\n    Checkbox = __decorate([\n        polyfill\n    ], Checkbox);\n    return Checkbox;\n}(AbstractPureComponent2));\nexport { Checkbox };\n//# sourceMappingURL=controls.js.map"]},"metadata":{},"sourceType":"module"}