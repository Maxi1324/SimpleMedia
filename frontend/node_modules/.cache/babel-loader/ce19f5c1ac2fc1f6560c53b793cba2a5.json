{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Classes } from \"../../common\";\nimport { Dialog } from \"../../components\";\nimport { Hotkey } from \"./hotkey\";\nimport { Hotkeys } from \"./hotkeys\";\n/**\n * The delay before showing or hiding the dialog. Should be long enough to\n * allow all registered hotkey listeners to execute first.\n */\n\nvar DELAY_IN_MS = 10;\n\nvar HotkeysDialog =\n/** @class */\nfunction () {\n  function HotkeysDialog() {\n    var _this = this;\n\n    this.componentProps = {\n      globalHotkeysGroup: \"Global hotkeys\"\n    };\n    this.container = null;\n    this.hotkeysQueue = [];\n    this.isDialogShowing = false;\n\n    this.show = function () {\n      _this.isDialogShowing = true;\n\n      _this.render();\n    };\n\n    this.hide = function () {\n      _this.isDialogShowing = false;\n\n      _this.render();\n    };\n  }\n\n  HotkeysDialog.prototype.render = function () {\n    if (this.container == null) {\n      this.container = this.getContainer();\n    }\n\n    ReactDOM.render(this.renderComponent(), this.container);\n  };\n\n  HotkeysDialog.prototype.unmount = function () {\n    if (this.container != null) {\n      ReactDOM.unmountComponentAtNode(this.container);\n      this.container.remove();\n      this.container = null;\n    }\n  };\n  /**\n   * Because hotkeys can be registered globally and locally and because\n   * event ordering cannot be guaranteed, we use this debouncing method to\n   * allow all hotkey listeners to fire and add their hotkeys to the dialog.\n   *\n   * 10msec after the last listener adds their hotkeys, we render the dialog\n   * and clear the queue.\n   */\n\n\n  HotkeysDialog.prototype.enqueueHotkeysForDisplay = function (hotkeys) {\n    this.hotkeysQueue.push(hotkeys); // reset timeout for debounce\n\n    window.clearTimeout(this.showTimeoutToken);\n    this.showTimeoutToken = window.setTimeout(this.show, DELAY_IN_MS);\n  };\n\n  HotkeysDialog.prototype.hideAfterDelay = function () {\n    window.clearTimeout(this.hideTimeoutToken);\n    this.hideTimeoutToken = window.setTimeout(this.hide, DELAY_IN_MS);\n  };\n\n  HotkeysDialog.prototype.isShowing = function () {\n    return this.isDialogShowing;\n  };\n\n  HotkeysDialog.prototype.getContainer = function () {\n    if (this.container == null) {\n      this.container = document.createElement(\"div\");\n      this.container.classList.add(Classes.PORTAL);\n      document.body.appendChild(this.container);\n    }\n\n    return this.container;\n  };\n\n  HotkeysDialog.prototype.renderComponent = function () {\n    return React.createElement(Dialog, __assign({}, this.componentProps, {\n      className: classNames(Classes.HOTKEY_DIALOG, this.componentProps.className),\n      isOpen: this.isDialogShowing,\n      onClose: this.hide\n    }), React.createElement(\"div\", {\n      className: Classes.DIALOG_BODY\n    }, this.renderHotkeys()));\n  };\n\n  HotkeysDialog.prototype.renderHotkeys = function () {\n    var _this = this;\n\n    var hotkeys = this.emptyHotkeyQueue();\n    var elements = hotkeys.map(function (hotkey, index) {\n      var group = hotkey.global === true && hotkey.group == null ? _this.componentProps.globalHotkeysGroup : hotkey.group;\n      return React.createElement(Hotkey, __assign({\n        key: index\n      }, hotkey, {\n        group: group\n      }));\n    });\n    return React.createElement(Hotkeys, null, elements);\n  };\n\n  HotkeysDialog.prototype.emptyHotkeyQueue = function () {\n    // flatten then empty the hotkeys queue\n    var hotkeys = this.hotkeysQueue.reduce(function (arr, queued) {\n      return arr.concat(queued);\n    }, []);\n    this.hotkeysQueue.length = 0;\n    return hotkeys;\n  };\n\n  return HotkeysDialog;\n}(); // singleton instance\n\n\nvar HOTKEYS_DIALOG = new HotkeysDialog();\nexport function isHotkeysDialogShowing() {\n  return HOTKEYS_DIALOG.isShowing();\n}\nexport function setHotkeysDialogProps(props) {\n  for (var key in props) {\n    if (props.hasOwnProperty(key)) {\n      HOTKEYS_DIALOG.componentProps[key] = props[key];\n    }\n  }\n}\nexport function showHotkeysDialog(hotkeys) {\n  HOTKEYS_DIALOG.enqueueHotkeysForDisplay(hotkeys);\n}\nexport function hideHotkeysDialog() {\n  HOTKEYS_DIALOG.hide();\n}\n/**\n * Use this function instead of `hideHotkeysDialog` if you need to ensure that all hotkey listeners\n * have time to execute with the dialog in a consistent open state. This can avoid flickering the\n * dialog between open and closedÂ states as successive listeners fire.\n */\n\nexport function hideHotkeysDialogAfterDelay() {\n  HOTKEYS_DIALOG.hideAfterDelay();\n}","map":{"version":3,"sources":["../../../../src/components/hotkeys/hotkeysDialog.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Classes } from \"../../common\";\nimport { Dialog } from \"../../components\";\nimport { Hotkey } from \"./hotkey\";\nimport { Hotkeys } from \"./hotkeys\";\n/**\n * The delay before showing or hiding the dialog. Should be long enough to\n * allow all registered hotkey listeners to execute first.\n */\nvar DELAY_IN_MS = 10;\nvar HotkeysDialog = /** @class */ (function () {\n    function HotkeysDialog() {\n        var _this = this;\n        this.componentProps = {\n            globalHotkeysGroup: \"Global hotkeys\",\n        };\n        this.container = null;\n        this.hotkeysQueue = [];\n        this.isDialogShowing = false;\n        this.show = function () {\n            _this.isDialogShowing = true;\n            _this.render();\n        };\n        this.hide = function () {\n            _this.isDialogShowing = false;\n            _this.render();\n        };\n    }\n    HotkeysDialog.prototype.render = function () {\n        if (this.container == null) {\n            this.container = this.getContainer();\n        }\n        ReactDOM.render(this.renderComponent(), this.container);\n    };\n    HotkeysDialog.prototype.unmount = function () {\n        if (this.container != null) {\n            ReactDOM.unmountComponentAtNode(this.container);\n            this.container.remove();\n            this.container = null;\n        }\n    };\n    /**\n     * Because hotkeys can be registered globally and locally and because\n     * event ordering cannot be guaranteed, we use this debouncing method to\n     * allow all hotkey listeners to fire and add their hotkeys to the dialog.\n     *\n     * 10msec after the last listener adds their hotkeys, we render the dialog\n     * and clear the queue.\n     */\n    HotkeysDialog.prototype.enqueueHotkeysForDisplay = function (hotkeys) {\n        this.hotkeysQueue.push(hotkeys);\n        // reset timeout for debounce\n        window.clearTimeout(this.showTimeoutToken);\n        this.showTimeoutToken = window.setTimeout(this.show, DELAY_IN_MS);\n    };\n    HotkeysDialog.prototype.hideAfterDelay = function () {\n        window.clearTimeout(this.hideTimeoutToken);\n        this.hideTimeoutToken = window.setTimeout(this.hide, DELAY_IN_MS);\n    };\n    HotkeysDialog.prototype.isShowing = function () {\n        return this.isDialogShowing;\n    };\n    HotkeysDialog.prototype.getContainer = function () {\n        if (this.container == null) {\n            this.container = document.createElement(\"div\");\n            this.container.classList.add(Classes.PORTAL);\n            document.body.appendChild(this.container);\n        }\n        return this.container;\n    };\n    HotkeysDialog.prototype.renderComponent = function () {\n        return (React.createElement(Dialog, __assign({}, this.componentProps, { className: classNames(Classes.HOTKEY_DIALOG, this.componentProps.className), isOpen: this.isDialogShowing, onClose: this.hide }),\n            React.createElement(\"div\", { className: Classes.DIALOG_BODY }, this.renderHotkeys())));\n    };\n    HotkeysDialog.prototype.renderHotkeys = function () {\n        var _this = this;\n        var hotkeys = this.emptyHotkeyQueue();\n        var elements = hotkeys.map(function (hotkey, index) {\n            var group = hotkey.global === true && hotkey.group == null ? _this.componentProps.globalHotkeysGroup : hotkey.group;\n            return React.createElement(Hotkey, __assign({ key: index }, hotkey, { group: group }));\n        });\n        return React.createElement(Hotkeys, null, elements);\n    };\n    HotkeysDialog.prototype.emptyHotkeyQueue = function () {\n        // flatten then empty the hotkeys queue\n        var hotkeys = this.hotkeysQueue.reduce(function (arr, queued) { return arr.concat(queued); }, []);\n        this.hotkeysQueue.length = 0;\n        return hotkeys;\n    };\n    return HotkeysDialog;\n}());\n// singleton instance\nvar HOTKEYS_DIALOG = new HotkeysDialog();\nexport function isHotkeysDialogShowing() {\n    return HOTKEYS_DIALOG.isShowing();\n}\nexport function setHotkeysDialogProps(props) {\n    for (var key in props) {\n        if (props.hasOwnProperty(key)) {\n            HOTKEYS_DIALOG.componentProps[key] = props[key];\n        }\n    }\n}\nexport function showHotkeysDialog(hotkeys) {\n    HOTKEYS_DIALOG.enqueueHotkeysForDisplay(hotkeys);\n}\nexport function hideHotkeysDialog() {\n    HOTKEYS_DIALOG.hide();\n}\n/**\n * Use this function instead of `hideHotkeysDialog` if you need to ensure that all hotkey listeners\n * have time to execute with the dialog in a consistent open state. This can avoid flickering the\n * dialog between open and closedÂ states as successive listeners fire.\n */\nexport function hideHotkeysDialogAfterDelay() {\n    HOTKEYS_DIALOG.hideAfterDelay();\n}\n//# sourceMappingURL=hotkeysDialog.js.map"]},"metadata":{},"sourceType":"module"}