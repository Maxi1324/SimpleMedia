{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2 } from \"../../common\";\nimport { DIVIDER } from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\"; // this component is simple enough that tests would be purely tautological.\n\n/* istanbul ignore next */\n\nvar Divider =\n/** @class */\nfunction (_super) {\n  __extends(Divider, _super);\n\n  function Divider() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Divider.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        _b = _a.tagName,\n        tagName = _b === void 0 ? \"div\" : _b,\n        htmlProps = __rest(_a, [\"className\", \"tagName\"]);\n\n    var classes = classNames(DIVIDER, className);\n    return React.createElement(tagName, __assign(__assign({}, htmlProps), {\n      className: classes\n    }));\n  };\n\n  Divider.displayName = DISPLAYNAME_PREFIX + \".Divider\";\n  Divider = __decorate([polyfill], Divider);\n  return Divider;\n}(AbstractPureComponent2);\n\nexport { Divider };","map":{"version":3,"sources":["../../../../src/components/divider/divider.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SAAS,sBAAT,QAAuC,cAAvC;AACA,SAAS,OAAT,QAAwB,sBAAxB;AACA,SAAS,kBAAT,QAA2C,oBAA3C,C,CAWA;;AACA;;AAEA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAA7B,WAAA,OAAA,GAAA;;AAWC;;AARU,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACI,QAAM,EAAA,GAA+C,KAAK,KAA1D;AAAA,QAAQ,SAAS,GAAA,EAAA,CAAA,SAAjB;AAAA,QAAmB,EAAA,GAAA,EAAA,CAAA,OAAnB;AAAA,QAAmB,OAAO,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAAlC;AAAA,QAAuC,SAAS,GAAA,MAAA,CAAA,EAAA,EAA1C,CAAA,WAAA,EAAA,SAAA,CAA0C,CAAhD;;AACA,QAAM,OAAO,GAAG,UAAU,CAAC,OAAD,EAAU,SAAV,CAA1B;AACA,WAAO,KAAK,CAAC,aAAN,CAAoB,OAApB,EAA2B,QAAA,CAAA,QAAA,CAAA,EAAA,EAC3B,SAD2B,CAAA,EAClB;AACZ,MAAA,SAAS,EAAE;AADC,KADkB,CAA3B,CAAP;AAIH,GAPM;;AAFO,EAAA,OAAA,CAAA,WAAA,GAAiB,kBAAkB,GAAA,UAAnC;AADL,EAAA,OAAO,GAAA,UAAA,CAAA,CADnB,QACmB,CAAA,EAAP,OAAO,CAAP;AAWb,SAAA,OAAA;AAAC,CAXD,CAA6B,sBAA7B,CAAA;;SAAa,O","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2 } from \"../../common\";\nimport { DIVIDER } from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\nvar Divider = /** @class */ (function (_super) {\n    __extends(Divider, _super);\n    function Divider() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Divider.prototype.render = function () {\n        var _a = this.props, className = _a.className, _b = _a.tagName, tagName = _b === void 0 ? \"div\" : _b, htmlProps = __rest(_a, [\"className\", \"tagName\"]);\n        var classes = classNames(DIVIDER, className);\n        return React.createElement(tagName, __assign(__assign({}, htmlProps), { className: classes }));\n    };\n    Divider.displayName = DISPLAYNAME_PREFIX + \".Divider\";\n    Divider = __decorate([\n        polyfill\n    ], Divider);\n    return Divider;\n}(AbstractPureComponent2));\nexport { Divider };\n//# sourceMappingURL=divider.js.map"]},"metadata":{},"sourceType":"module"}