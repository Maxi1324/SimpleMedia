{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAB_KEY_CODE = 9;\n/* istanbul ignore next */\n\n/**\n * A nifty little class that maintains event handlers to add a class to the container element\n * when entering \"mouse mode\" (on a `mousedown` event) and remove it when entering \"keyboard mode\"\n * (on a `tab` key `keydown` event).\n */\n\nvar InteractionModeEngine =\n/** @class */\nfunction () {\n  function InteractionModeEngine(container, className) {\n    var _this = this;\n\n    this.container = container;\n    this.className = className;\n    this.isRunning = false;\n\n    this.handleKeyDown = function (e) {\n      // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n      // eslint-disable-next-line deprecation/deprecation\n      if (e.which === TAB_KEY_CODE) {\n        _this.reset();\n\n        _this.container.addEventListener(\"mousedown\", _this.handleMouseDown);\n      }\n    };\n\n    this.handleMouseDown = function () {\n      _this.reset();\n\n      _this.container.classList.add(_this.className); // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\n\n\n      _this.container.addEventListener(\"keydown\", _this.handleKeyDown);\n    };\n  }\n  /** Returns whether the engine is currently running. */\n\n\n  InteractionModeEngine.prototype.isActive = function () {\n    return this.isRunning;\n  };\n  /** Enable behavior which applies the given className when in mouse mode. */\n\n\n  InteractionModeEngine.prototype.start = function () {\n    this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n    this.isRunning = true;\n  };\n  /** Disable interaction mode behavior and remove className from container. */\n\n\n  InteractionModeEngine.prototype.stop = function () {\n    this.reset();\n    this.isRunning = false;\n  };\n\n  InteractionModeEngine.prototype.reset = function () {\n    this.container.classList.remove(this.className); // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\n\n    this.container.removeEventListener(\"keydown\", this.handleKeyDown);\n    this.container.removeEventListener(\"mousedown\", this.handleMouseDown);\n  };\n\n  return InteractionModeEngine;\n}();\n\nexport { InteractionModeEngine };","map":{"version":3,"sources":["../../../src/common/interactionMode.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAEH,IAAM,YAAY,GAAG,CAArB;AAEA;;AAEA;;;;AAIG;;AACH,IAAA,qBAAA;AAAA;AAAA,YAAA;AAGI,WAAA,qBAAA,CAAoB,SAApB,EAAgD,SAAhD,EAAiE;AAAjE,QAAA,KAAA,GAAA,IAAA;;AAAoB,SAAA,SAAA,GAAA,SAAA;AAA4B,SAAA,SAAA,GAAA,SAAA;AAFxC,SAAA,SAAA,GAAY,KAAZ;;AA4BA,SAAA,aAAA,GAAgB,UAAC,CAAD,EAAiB;AACrC;AACA;AACA,UAAI,CAAC,CAAC,KAAF,KAAY,YAAhB,EAA8B;AAC1B,QAAA,KAAI,CAAC,KAAL;;AACA,QAAA,KAAI,CAAC,SAAL,CAAe,gBAAf,CAAgC,WAAhC,EAA6C,KAAI,CAAC,eAAlD;AACH;AACJ,KAPO;;AASA,SAAA,eAAA,GAAkB,YAAA;AACtB,MAAA,KAAI,CAAC,KAAL;;AACA,MAAA,KAAI,CAAC,SAAL,CAAe,SAAf,CAAyB,GAAzB,CAA6B,KAAI,CAAC,SAAlC,EAFsB,CAGtB;;;AACA,MAAA,KAAI,CAAC,SAAL,CAAe,gBAAf,CAAgC,SAAhC,EAA2C,KAAI,CAAC,aAAhD;AACH,KALO;AAnC6D;AAErE;;;AACO,EAAA,qBAAA,CAAA,SAAA,CAAA,QAAA,GAAP,YAAA;AACI,WAAO,KAAK,SAAZ;AACH,GAFM;AAIP;;;AACO,EAAA,qBAAA,CAAA,SAAA,CAAA,KAAA,GAAP,YAAA;AACI,SAAK,SAAL,CAAe,gBAAf,CAAgC,WAAhC,EAA6C,KAAK,eAAlD;AACA,SAAK,SAAL,GAAiB,IAAjB;AACH,GAHM;AAKP;;;AACO,EAAA,qBAAA,CAAA,SAAA,CAAA,IAAA,GAAP,YAAA;AACI,SAAK,KAAL;AACA,SAAK,SAAL,GAAiB,KAAjB;AACH,GAHM;;AAKC,EAAA,qBAAA,CAAA,SAAA,CAAA,KAAA,GAAR,YAAA;AACI,SAAK,SAAL,CAAe,SAAf,CAAyB,MAAzB,CAAgC,KAAK,SAArC,EADJ,CAEI;;AACA,SAAK,SAAL,CAAe,mBAAf,CAAmC,SAAnC,EAA8C,KAAK,aAAnD;AACA,SAAK,SAAL,CAAe,mBAAf,CAAmC,WAAnC,EAAgD,KAAK,eAArD;AACH,GALO;;AAsBZ,SAAA,qBAAA;AAAC,CA5CD,EAAA","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar TAB_KEY_CODE = 9;\n/* istanbul ignore next */\n/**\n * A nifty little class that maintains event handlers to add a class to the container element\n * when entering \"mouse mode\" (on a `mousedown` event) and remove it when entering \"keyboard mode\"\n * (on a `tab` key `keydown` event).\n */\nvar InteractionModeEngine = /** @class */ (function () {\n    function InteractionModeEngine(container, className) {\n        var _this = this;\n        this.container = container;\n        this.className = className;\n        this.isRunning = false;\n        this.handleKeyDown = function (e) {\n            // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n            // eslint-disable-next-line deprecation/deprecation\n            if (e.which === TAB_KEY_CODE) {\n                _this.reset();\n                _this.container.addEventListener(\"mousedown\", _this.handleMouseDown);\n            }\n        };\n        this.handleMouseDown = function () {\n            _this.reset();\n            _this.container.classList.add(_this.className);\n            // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\n            _this.container.addEventListener(\"keydown\", _this.handleKeyDown);\n        };\n    }\n    /** Returns whether the engine is currently running. */\n    InteractionModeEngine.prototype.isActive = function () {\n        return this.isRunning;\n    };\n    /** Enable behavior which applies the given className when in mouse mode. */\n    InteractionModeEngine.prototype.start = function () {\n        this.container.addEventListener(\"mousedown\", this.handleMouseDown);\n        this.isRunning = true;\n    };\n    /** Disable interaction mode behavior and remove className from container. */\n    InteractionModeEngine.prototype.stop = function () {\n        this.reset();\n        this.isRunning = false;\n    };\n    InteractionModeEngine.prototype.reset = function () {\n        this.container.classList.remove(this.className);\n        // HACKHACK: see https://github.com/palantir/blueprint/issues/4342\n        this.container.removeEventListener(\"keydown\", this.handleKeyDown);\n        this.container.removeEventListener(\"mousedown\", this.handleMouseDown);\n    };\n    return InteractionModeEngine;\n}());\nexport { InteractionModeEngine };\n//# sourceMappingURL=interactionMode.js.map"]},"metadata":{},"sourceType":"module"}