{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\nimport { normalizeKeyCombo } from \"./hotkeyParser\";\nvar KeyIcons = {\n  alt: \"key-option\",\n  cmd: \"key-command\",\n  ctrl: \"key-control\",\n  delete: \"key-delete\",\n  down: \"arrow-down\",\n  enter: \"key-enter\",\n  left: \"arrow-left\",\n  meta: \"key-command\",\n  right: \"arrow-right\",\n  shift: \"key-shift\",\n  up: \"arrow-up\"\n};\n\nvar KeyCombo =\n/** @class */\nfunction (_super) {\n  __extends(KeyCombo, _super);\n\n  function KeyCombo() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.renderKey = function (key, index) {\n      var icon = KeyIcons[key];\n      var reactKey = \"key-\" + index;\n      return icon == null ? React.createElement(\"kbd\", {\n        className: Classes.KEY,\n        key: reactKey\n      }, key) : React.createElement(\"kbd\", {\n        className: classNames(Classes.KEY, Classes.MODIFIER_KEY),\n        key: reactKey\n      }, React.createElement(Icon, {\n        icon: icon\n      }), \" \", key);\n    };\n\n    _this.renderMinimalKey = function (key, index) {\n      var icon = KeyIcons[key];\n      return icon == null ? key : React.createElement(Icon, {\n        icon: icon,\n        key: \"key-\" + index\n      });\n    };\n\n    return _this;\n  }\n\n  KeyCombo.prototype.render = function () {\n    var _a = this.props,\n        className = _a.className,\n        combo = _a.combo,\n        minimal = _a.minimal;\n    var keys = normalizeKeyCombo(combo).map(function (key) {\n      return key.length === 1 ? key.toUpperCase() : key;\n    }).map(minimal ? this.renderMinimalKey : this.renderKey);\n    return React.createElement(\"span\", {\n      className: classNames(Classes.KEY_COMBO, className)\n    }, keys);\n  };\n\n  KeyCombo.displayName = DISPLAYNAME_PREFIX + \".KeyCombo\";\n  KeyCombo = __decorate([polyfill], KeyCombo);\n  return KeyCombo;\n}(AbstractPureComponent2);\n\nexport { KeyCombo };","map":{"version":3,"sources":["../../../../src/components/hotkeys/keyCombo.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SAAS,sBAAT,EAAiC,OAAjC,EAA0C,kBAA1C,QAA4E,cAA5E;AACA,SAAS,IAAT,QAA+B,cAA/B;AACA,SAAS,iBAAT,QAAkC,gBAAlC;AAEA,IAAM,QAAQ,GAAgC;AAC1C,EAAA,GAAG,EAAE,YADqC;AAE1C,EAAA,GAAG,EAAE,aAFqC;AAG1C,EAAA,IAAI,EAAE,aAHoC;AAI1C,EAAA,MAAM,EAAE,YAJkC;AAK1C,EAAA,IAAI,EAAE,YALoC;AAM1C,EAAA,KAAK,EAAE,WANmC;AAO1C,EAAA,IAAI,EAAE,YAPoC;AAQ1C,EAAA,IAAI,EAAE,aARoC;AAS1C,EAAA,KAAK,EAAE,aATmC;AAU1C,EAAA,KAAK,EAAE,WAVmC;AAW1C,EAAA,EAAE,EAAE;AAXsC,CAA9C;;AA6BA,IAAA,QAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA8B,EAAA,SAAA,CAAA,QAAA,EAAA,MAAA,CAAA;;AAA9B,WAAA,QAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAWY,IAAA,KAAA,CAAA,SAAA,GAAY,UAAC,GAAD,EAAc,KAAd,EAA2B;AAC3C,UAAM,IAAI,GAAG,QAAQ,CAAC,GAAD,CAArB;AACA,UAAM,QAAQ,GAAG,SAAO,KAAxB;AACA,aAAO,IAAI,IAAI,IAAR,GACH,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,OAAO,CAAC,GAAxB;AAA6B,QAAA,GAAG,EAAE;AAAlC,OAAA,EACK,GADL,CADG,GAKH,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,GAAT,EAAc,OAAO,CAAC,YAAtB,CAA1B;AAA+D,QAAA,GAAG,EAAE;AAApE,OAAA,EACI,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,QAAA,IAAI,EAAE;AAAP,OAAL,CADJ,E,GAAA,EAC0B,GAD1B,CALJ;AASH,KAZO;;AAcA,IAAA,KAAA,CAAA,gBAAA,GAAmB,UAAC,GAAD,EAAc,KAAd,EAA2B;AAClD,UAAM,IAAI,GAAG,QAAQ,CAAC,GAAD,CAArB;AACA,aAAO,IAAI,IAAI,IAAR,GAAe,GAAf,GAAqB,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,QAAA,IAAI,EAAE,IAAP;AAAa,QAAA,GAAG,EAAE,SAAO;AAAzB,OAAL,CAA5B;AACH,KAHO;;;AAIX;;AA1BU,EAAA,QAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACU,QAAA,EAAA,GAAgC,KAAK,KAArC;AAAA,QAAE,SAAS,GAAA,EAAA,CAAA,SAAX;AAAA,QAAa,KAAK,GAAA,EAAA,CAAA,KAAlB;AAAA,QAAoB,OAAO,GAAA,EAAA,CAAA,OAA3B;AACN,QAAM,IAAI,GAAG,iBAAiB,CAAC,KAAD,CAAjB,CACR,GADQ,CACJ,UAAA,GAAA,EAAG;AAAI,aAAC,GAAG,CAAC,MAAJ,KAAe,CAAf,GAAmB,GAAG,CAAC,WAAJ,EAAnB,GAAD,GAAA;AAA4C,KAD/C,EAER,GAFQ,CAEJ,OAAO,GAAG,KAAK,gBAAR,GAA2B,KAAK,SAFnC,CAAb;AAGA,WAAO,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAE,UAAU,CAAC,OAAO,CAAC,SAAT,EAAoB,SAApB;AAA3B,KAAA,EAA4D,IAA5D,CAAP;AACH,GANM;;AAFO,EAAA,QAAA,CAAA,WAAA,GAAiB,kBAAkB,GAAA,WAAnC;AADL,EAAA,QAAQ,GAAA,UAAA,CAAA,CADpB,QACoB,CAAA,EAAR,QAAQ,CAAR;AA6Bb,SAAA,QAAA;AAAC,CA7BD,CAA8B,sBAA9B,CAAA;;SAAa,Q","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { Icon } from \"../icon/icon\";\nimport { normalizeKeyCombo } from \"./hotkeyParser\";\nvar KeyIcons = {\n    alt: \"key-option\",\n    cmd: \"key-command\",\n    ctrl: \"key-control\",\n    delete: \"key-delete\",\n    down: \"arrow-down\",\n    enter: \"key-enter\",\n    left: \"arrow-left\",\n    meta: \"key-command\",\n    right: \"arrow-right\",\n    shift: \"key-shift\",\n    up: \"arrow-up\",\n};\nvar KeyCombo = /** @class */ (function (_super) {\n    __extends(KeyCombo, _super);\n    function KeyCombo() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.renderKey = function (key, index) {\n            var icon = KeyIcons[key];\n            var reactKey = \"key-\" + index;\n            return icon == null ? (React.createElement(\"kbd\", { className: Classes.KEY, key: reactKey }, key)) : (React.createElement(\"kbd\", { className: classNames(Classes.KEY, Classes.MODIFIER_KEY), key: reactKey },\n                React.createElement(Icon, { icon: icon }),\n                \" \",\n                key));\n        };\n        _this.renderMinimalKey = function (key, index) {\n            var icon = KeyIcons[key];\n            return icon == null ? key : React.createElement(Icon, { icon: icon, key: \"key-\" + index });\n        };\n        return _this;\n    }\n    KeyCombo.prototype.render = function () {\n        var _a = this.props, className = _a.className, combo = _a.combo, minimal = _a.minimal;\n        var keys = normalizeKeyCombo(combo)\n            .map(function (key) { return (key.length === 1 ? key.toUpperCase() : key); })\n            .map(minimal ? this.renderMinimalKey : this.renderKey);\n        return React.createElement(\"span\", { className: classNames(Classes.KEY_COMBO, className) }, keys);\n    };\n    KeyCombo.displayName = DISPLAYNAME_PREFIX + \".KeyCombo\";\n    KeyCombo = __decorate([\n        polyfill\n    ], KeyCombo);\n    return KeyCombo;\n}(AbstractPureComponent2));\nexport { KeyCombo };\n//# sourceMappingURL=keyCombo.js.map"]},"metadata":{},"sourceType":"module"}