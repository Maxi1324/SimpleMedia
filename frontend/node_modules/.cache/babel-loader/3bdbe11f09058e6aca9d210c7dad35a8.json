{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { KeyCombo } from \"./keyCombo\";\n\nvar Hotkey =\n/** @class */\nfunction (_super) {\n  __extends(Hotkey, _super);\n\n  function Hotkey() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Hotkey.prototype.render = function () {\n    var _a = this.props,\n        label = _a.label,\n        className = _a.className,\n        spreadableProps = __rest(_a, [\"label\", \"className\"]);\n\n    var rootClasses = classNames(Classes.HOTKEY, className);\n    return React.createElement(\"div\", {\n      className: rootClasses\n    }, React.createElement(\"div\", {\n      className: Classes.HOTKEY_LABEL\n    }, label), React.createElement(KeyCombo, __assign({}, spreadableProps)));\n  };\n\n  Hotkey.prototype.validateProps = function (props) {\n    if (props.global !== true && props.group == null) {\n      console.error(\"non-global <Hotkey>s must define a group\");\n    }\n  };\n\n  Hotkey.displayName = DISPLAYNAME_PREFIX + \".Hotkey\";\n  Hotkey.defaultProps = {\n    allowInInput: false,\n    disabled: false,\n    global: false,\n    preventDefault: false,\n    stopPropagation: false\n  };\n  Hotkey = __decorate([polyfill], Hotkey);\n  return Hotkey;\n}(AbstractPureComponent2);\n\nexport { Hotkey };","map":{"version":3,"sources":["../../../../src/components/hotkeys/hotkey.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SAAS,sBAAT,EAAiC,OAAjC,EAA0C,kBAA1C,QAA4E,cAA5E;AAEA,SAAS,QAAT,QAAyB,YAAzB;;AAKA,IAAA,MAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA4B,EAAA,SAAA,CAAA,MAAA,EAAA,MAAA,CAAA;;AAA5B,WAAA,MAAA,GAAA;;AA4BC;;AAjBU,EAAA,MAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACI,QAAM,EAAA,GAA2C,KAAK,KAAtD;AAAA,QAAQ,KAAK,GAAA,EAAA,CAAA,KAAb;AAAA,QAAe,SAAS,GAAA,EAAA,CAAA,SAAxB;AAAA,QAA6B,eAAe,GAAA,MAAA,CAAA,EAAA,EAAtC,CAAA,OAAA,EAAA,WAAA,CAAsC,CAA5C;;AAEA,QAAM,WAAW,GAAG,UAAU,CAAC,OAAO,CAAC,MAAT,EAAiB,SAAjB,CAA9B;AACA,WACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE;AAAhB,KAAA,EACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,KAAA,EAAuC,KAAvC,CADJ,EAEI,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS,QAAA,CAAA,EAAA,EAAK,eAAL,CAAT,CAFJ,CADJ;AAMH,GAVM;;AAYG,EAAA,MAAA,CAAA,SAAA,CAAA,aAAA,GAAV,UAAwB,KAAxB,EAA2C;AACvC,QAAI,KAAK,CAAC,MAAN,KAAiB,IAAjB,IAAyB,KAAK,CAAC,KAAN,IAAe,IAA5C,EAAkD;AAC9C,MAAA,OAAO,CAAC,KAAR,CAAc,0CAAd;AACH;AACJ,GAJS;;AAtBI,EAAA,MAAA,CAAA,WAAA,GAAiB,kBAAkB,GAAA,SAAnC;AAEA,EAAA,MAAA,CAAA,YAAA,GAAe;AACzB,IAAA,YAAY,EAAE,KADW;AAEzB,IAAA,QAAQ,EAAE,KAFe;AAGzB,IAAA,MAAM,EAAE,KAHiB;AAIzB,IAAA,cAAc,EAAE,KAJS;AAKzB,IAAA,eAAe,EAAE;AALQ,GAAf;AAHL,EAAA,MAAM,GAAA,UAAA,CAAA,CADlB,QACkB,CAAA,EAAN,MAAM,CAAN;AA4Bb,SAAA,MAAA;AAAC,CA5BD,CAA4B,sBAA5B,CAAA;;SAAa,M","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX } from \"../../common\";\nimport { KeyCombo } from \"./keyCombo\";\nvar Hotkey = /** @class */ (function (_super) {\n    __extends(Hotkey, _super);\n    function Hotkey() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Hotkey.prototype.render = function () {\n        var _a = this.props, label = _a.label, className = _a.className, spreadableProps = __rest(_a, [\"label\", \"className\"]);\n        var rootClasses = classNames(Classes.HOTKEY, className);\n        return (React.createElement(\"div\", { className: rootClasses },\n            React.createElement(\"div\", { className: Classes.HOTKEY_LABEL }, label),\n            React.createElement(KeyCombo, __assign({}, spreadableProps))));\n    };\n    Hotkey.prototype.validateProps = function (props) {\n        if (props.global !== true && props.group == null) {\n            console.error(\"non-global <Hotkey>s must define a group\");\n        }\n    };\n    Hotkey.displayName = DISPLAYNAME_PREFIX + \".Hotkey\";\n    Hotkey.defaultProps = {\n        allowInInput: false,\n        disabled: false,\n        global: false,\n        preventDefault: false,\n        stopPropagation: false,\n    };\n    Hotkey = __decorate([\n        polyfill\n    ], Hotkey);\n    return Hotkey;\n}(AbstractPureComponent2));\nexport { Hotkey };\n//# sourceMappingURL=hotkey.js.map"]},"metadata":{},"sourceType":"module"}