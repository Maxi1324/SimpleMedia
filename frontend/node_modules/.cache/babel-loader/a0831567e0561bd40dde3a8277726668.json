{"ast":null,"code":"/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/** Returns whether the value is a function. Acts as a type guard. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(value) {\n  return typeof value === \"function\";\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\nexport function safeInvoke(func) {\n  var args = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n\n  if (isFunction(func)) {\n    return func.apply(void 0, args);\n  }\n\n  return undefined;\n} // eslint-disable-next-line @typescript-eslint/ban-types\n\nexport function safeInvokeOrValue(funcOrValue) {\n  var args = [];\n\n  for (var _i = 1; _i < arguments.length; _i++) {\n    args[_i - 1] = arguments[_i];\n  }\n\n  return isFunction(funcOrValue) ? funcOrValue.apply(void 0, args) : funcOrValue;\n}","map":{"version":3,"sources":["../../../../src/common/utils/functionUtils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH;AACA;AACA,OAAM,SAAU,UAAV,CAAqB,KAArB,EAA+B;AACjC,SAAO,OAAO,KAAP,KAAiB,UAAxB;AACH,C,CAwBD;;AACA,OAAM,SAAU,UAAV,CAAqB,IAArB,EAA+C;AAAE,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAc;AAAd,IAAA,IAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACnD,MAAI,UAAU,CAAC,IAAD,CAAd,EAAsB;AAClB,WAAO,IAAI,CAAA,KAAJ,CAAI,KAAA,CAAJ,EAAQ,IAAR,CAAP;AACH;;AACD,SAAO,SAAP;AACH,C,CAwBD;;AACA,OAAM,SAAU,iBAAV,CAA4B,WAA5B,EAAmE;AAAE,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAAc;AAAd,IAAA,IAAA,CAAA,EAAA,GAAA,CAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AACvE,SAAO,UAAU,CAAC,WAAD,CAAV,GAA0B,WAAW,CAAA,KAAX,CAAW,KAAA,CAAX,EAAe,IAAf,CAA1B,GAAiD,WAAxD;AACH","sourceRoot":"","sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/** Returns whether the value is a function. Acts as a type guard. */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isFunction(value) {\n    return typeof value === \"function\";\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function safeInvoke(func) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    if (isFunction(func)) {\n        return func.apply(void 0, args);\n    }\n    return undefined;\n}\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function safeInvokeOrValue(funcOrValue) {\n    var args = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        args[_i - 1] = arguments[_i];\n    }\n    return isFunction(funcOrValue) ? funcOrValue.apply(void 0, args) : funcOrValue;\n}\n//# sourceMappingURL=functionUtils.js.map"]},"metadata":{},"sourceType":"module"}