{"ast":null,"code":"/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\n\nimport { __assign, __spreadArrays } from \"tslib\";\nimport * as React from \"react\";\nimport { HotkeysDialog2 } from \"../../components/hotkeys/hotkeysDialog2\";\nvar initialHotkeysState = {\n  hotkeys: [],\n  isDialogOpen: false\n};\n\nvar noOpDispatch = function () {\n  return null;\n}; // we can remove this guard once Blueprint depends on React 16\n\n\nexport var HotkeysContext = (_a = React.createContext) === null || _a === void 0 ? void 0 : _a.call(React, [initialHotkeysState, noOpDispatch]);\n\nvar hotkeysReducer = function (state, action) {\n  switch (action.type) {\n    case \"ADD_HOTKEYS\":\n      return __assign(__assign({}, state), {\n        hotkeys: __spreadArrays(state.hotkeys, action.payload)\n      });\n\n    case \"REMOVE_HOTKEYS\":\n      return __assign(__assign({}, state), {\n        hotkeys: state.hotkeys.filter(function (key) {\n          return action.payload.indexOf(key) === -1;\n        })\n      });\n\n    case \"OPEN_DIALOG\":\n      return __assign(__assign({}, state), {\n        isDialogOpen: true\n      });\n\n    case \"CLOSE_DIALOG\":\n      return __assign(__assign({}, state), {\n        isDialogOpen: false\n      });\n\n    default:\n      return state;\n  }\n};\n/**\n * Hotkeys context provider, necessary for the `useHotkeys` hook.\n */\n\n\nexport var HotkeysProvider = function (_a) {\n  var _b;\n\n  var children = _a.children,\n      dialogProps = _a.dialogProps,\n      renderDialog = _a.renderDialog;\n\n  var _c = React.useReducer(hotkeysReducer, initialHotkeysState),\n      state = _c[0],\n      dispatch = _c[1];\n\n  var handleDialogClose = React.useCallback(function () {\n    return dispatch({\n      type: \"CLOSE_DIALOG\"\n    });\n  }, []);\n  var dialog = (_b = renderDialog === null || renderDialog === void 0 ? void 0 : renderDialog(state, {\n    handleDialogClose: handleDialogClose\n  })) !== null && _b !== void 0 ? _b : React.createElement(HotkeysDialog2, __assign({}, dialogProps, {\n    isOpen: state.isDialogOpen,\n    hotkeys: state.hotkeys,\n    onClose: handleDialogClose\n  }));\n  return React.createElement(HotkeysContext.Provider, {\n    value: [state, dispatch]\n  }, children, dialog);\n};","map":{"version":3,"sources":["../../../../src/context/hotkeys/hotkeysProvider.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2021 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nimport { __assign, __spreadArrays } from \"tslib\";\nimport * as React from \"react\";\nimport { HotkeysDialog2 } from \"../../components/hotkeys/hotkeysDialog2\";\nvar initialHotkeysState = { hotkeys: [], isDialogOpen: false };\nvar noOpDispatch = function () { return null; };\n// we can remove this guard once Blueprint depends on React 16\nexport var HotkeysContext = (_a = React.createContext) === null || _a === void 0 ? void 0 : _a.call(React, [\n    initialHotkeysState,\n    noOpDispatch,\n]);\nvar hotkeysReducer = function (state, action) {\n    switch (action.type) {\n        case \"ADD_HOTKEYS\":\n            return __assign(__assign({}, state), { hotkeys: __spreadArrays(state.hotkeys, action.payload) });\n        case \"REMOVE_HOTKEYS\":\n            return __assign(__assign({}, state), { hotkeys: state.hotkeys.filter(function (key) { return action.payload.indexOf(key) === -1; }) });\n        case \"OPEN_DIALOG\":\n            return __assign(__assign({}, state), { isDialogOpen: true });\n        case \"CLOSE_DIALOG\":\n            return __assign(__assign({}, state), { isDialogOpen: false });\n        default:\n            return state;\n    }\n};\n/**\n * Hotkeys context provider, necessary for the `useHotkeys` hook.\n */\nexport var HotkeysProvider = function (_a) {\n    var _b;\n    var children = _a.children, dialogProps = _a.dialogProps, renderDialog = _a.renderDialog;\n    var _c = React.useReducer(hotkeysReducer, initialHotkeysState), state = _c[0], dispatch = _c[1];\n    var handleDialogClose = React.useCallback(function () { return dispatch({ type: \"CLOSE_DIALOG\" }); }, []);\n    var dialog = (_b = renderDialog === null || renderDialog === void 0 ? void 0 : renderDialog(state, { handleDialogClose: handleDialogClose })) !== null && _b !== void 0 ? _b : (React.createElement(HotkeysDialog2, __assign({}, dialogProps, { isOpen: state.isDialogOpen, hotkeys: state.hotkeys, onClose: handleDialogClose })));\n    return (React.createElement(HotkeysContext.Provider, { value: [state, dispatch] },\n        children,\n        dialog));\n};\n//# sourceMappingURL=hotkeysProvider.js.map"]},"metadata":{},"sourceType":"module"}