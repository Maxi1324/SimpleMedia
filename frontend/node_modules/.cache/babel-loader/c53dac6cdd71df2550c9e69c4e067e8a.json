{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __spreadArrays } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, Position } from \"../../common\";\nimport { TOASTER_CREATE_NULL, TOASTER_MAX_TOASTS_INVALID, TOASTER_WARN_INLINE } from \"../../common/errors\";\nimport { ESCAPE } from \"../../common/keys\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { Overlay } from \"../overlay/overlay\";\nimport { Toast } from \"./toast\";\n\nvar Toaster =\n/** @class */\nfunction (_super) {\n  __extends(Toaster, _super);\n\n  function Toaster() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {\n      toasts: []\n    }; // auto-incrementing identifier for un-keyed toasts\n\n    _this.toastId = 0;\n\n    _this.renderToast = function (toast) {\n      return React.createElement(Toast, __assign({}, toast, {\n        onDismiss: _this.getDismissHandler(toast)\n      }));\n    };\n\n    _this.getDismissHandler = function (toast) {\n      return function (timeoutExpired) {\n        _this.dismiss(toast.key, timeoutExpired);\n      };\n    };\n\n    _this.handleClose = function (e) {\n      // NOTE that `e` isn't always a KeyboardEvent but that's the only type we care about\n      // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n\n      /* eslint-disable-next-line deprecation/deprecation */\n      if (e.which === ESCAPE) {\n        _this.clear();\n      }\n    };\n\n    return _this;\n  }\n\n  Toaster_1 = Toaster;\n  /**\n   * Create a new `Toaster` instance that can be shared around your application.\n   * The `Toaster` will be rendered into a new element appended to the given container.\n   */\n\n  Toaster.create = function (props, container) {\n    if (container === void 0) {\n      container = document.body;\n    }\n\n    if (props != null && props.usePortal != null && !isNodeEnv(\"production\")) {\n      console.warn(TOASTER_WARN_INLINE);\n    }\n\n    var containerElement = document.createElement(\"div\");\n    container.appendChild(containerElement);\n    var toaster = ReactDOM.render(React.createElement(Toaster_1, __assign({}, props, {\n      usePortal: false\n    })), containerElement);\n\n    if (toaster == null) {\n      throw new Error(TOASTER_CREATE_NULL);\n    }\n\n    return toaster;\n  };\n\n  Toaster.prototype.show = function (props, key) {\n    if (this.props.maxToasts) {\n      // check if active number of toasts are at the maxToasts limit\n      this.dismissIfAtLimit();\n    }\n\n    var options = this.createToastOptions(props, key);\n\n    if (key === undefined || this.isNewToastKey(key)) {\n      this.setState(function (prevState) {\n        return {\n          toasts: __spreadArrays([options], prevState.toasts)\n        };\n      });\n    } else {\n      this.setState(function (prevState) {\n        return {\n          toasts: prevState.toasts.map(function (t) {\n            return t.key === key ? options : t;\n          })\n        };\n      });\n    }\n\n    return options.key;\n  };\n\n  Toaster.prototype.dismiss = function (key, timeoutExpired) {\n    if (timeoutExpired === void 0) {\n      timeoutExpired = false;\n    }\n\n    this.setState(function (_a) {\n      var toasts = _a.toasts;\n      return {\n        toasts: toasts.filter(function (t) {\n          var _a;\n\n          var matchesKey = t.key === key;\n\n          if (matchesKey) {\n            (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, timeoutExpired);\n          }\n\n          return !matchesKey;\n        })\n      };\n    });\n  };\n\n  Toaster.prototype.clear = function () {\n    this.state.toasts.forEach(function (t) {\n      var _a;\n\n      return (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, false);\n    });\n    this.setState({\n      toasts: []\n    });\n  };\n\n  Toaster.prototype.getToasts = function () {\n    return this.state.toasts;\n  };\n\n  Toaster.prototype.render = function () {\n    var classes = classNames(Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);\n    return React.createElement(Overlay, {\n      autoFocus: this.props.autoFocus,\n      canEscapeKeyClose: this.props.canEscapeKeyClear,\n      canOutsideClickClose: false,\n      className: classes,\n      enforceFocus: false,\n      hasBackdrop: false,\n      isOpen: this.state.toasts.length > 0 || this.props.children != null,\n      onClose: this.handleClose,\n      // $pt-transition-duration * 3 + $pt-transition-duration / 2\n      transitionDuration: 350,\n      transitionName: Classes.TOAST,\n      usePortal: this.props.usePortal\n    }, this.state.toasts.map(this.renderToast, this), this.props.children);\n  };\n\n  Toaster.prototype.validateProps = function (_a) {\n    var maxToasts = _a.maxToasts; // maximum number of toasts should not be a number less than 1\n\n    if (maxToasts !== undefined && maxToasts < 1) {\n      throw new Error(TOASTER_MAX_TOASTS_INVALID);\n    }\n  };\n\n  Toaster.prototype.isNewToastKey = function (key) {\n    return this.state.toasts.every(function (toast) {\n      return toast.key !== key;\n    });\n  };\n\n  Toaster.prototype.dismissIfAtLimit = function () {\n    if (this.state.toasts.length === this.props.maxToasts) {\n      // dismiss the oldest toast to stay within the maxToasts limit\n      this.dismiss(this.state.toasts[this.state.toasts.length - 1].key);\n    }\n  };\n\n  Toaster.prototype.createToastOptions = function (props, key) {\n    if (key === void 0) {\n      key = \"toast-\" + this.toastId++;\n    } // clone the object before adding the key prop to avoid leaking the mutation\n\n\n    return __assign(__assign({}, props), {\n      key: key\n    });\n  };\n\n  Toaster.prototype.getPositionClasses = function () {\n    var positions = this.props.position.split(\"-\"); // NOTE that there is no -center class because that's the default style\n\n    return __spreadArrays(positions.map(function (p) {\n      return Classes.TOAST_CONTAINER + \"-\" + p.toLowerCase();\n    }), [Classes.TOAST_CONTAINER + \"-\" + (this.props.usePortal ? \"in-portal\" : \"inline\")]);\n  };\n\n  var Toaster_1;\n  Toaster.displayName = DISPLAYNAME_PREFIX + \".Toaster\";\n  Toaster.defaultProps = {\n    autoFocus: false,\n    canEscapeKeyClear: true,\n    position: Position.TOP,\n    usePortal: true\n  };\n  Toaster = Toaster_1 = __decorate([polyfill], Toaster);\n  return Toaster;\n}(AbstractPureComponent2);\n\nexport { Toaster };","map":{"version":3,"sources":["../../../../src/components/toast/toaster.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __spreadArrays } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, Position } from \"../../common\";\nimport { TOASTER_CREATE_NULL, TOASTER_MAX_TOASTS_INVALID, TOASTER_WARN_INLINE } from \"../../common/errors\";\nimport { ESCAPE } from \"../../common/keys\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isNodeEnv } from \"../../common/utils\";\nimport { Overlay } from \"../overlay/overlay\";\nimport { Toast } from \"./toast\";\nvar Toaster = /** @class */ (function (_super) {\n    __extends(Toaster, _super);\n    function Toaster() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {\n            toasts: [],\n        };\n        // auto-incrementing identifier for un-keyed toasts\n        _this.toastId = 0;\n        _this.renderToast = function (toast) {\n            return React.createElement(Toast, __assign({}, toast, { onDismiss: _this.getDismissHandler(toast) }));\n        };\n        _this.getDismissHandler = function (toast) { return function (timeoutExpired) {\n            _this.dismiss(toast.key, timeoutExpired);\n        }; };\n        _this.handleClose = function (e) {\n            // NOTE that `e` isn't always a KeyboardEvent but that's the only type we care about\n            // HACKHACK: https://github.com/palantir/blueprint/issues/4165\n            /* eslint-disable-next-line deprecation/deprecation */\n            if (e.which === ESCAPE) {\n                _this.clear();\n            }\n        };\n        return _this;\n    }\n    Toaster_1 = Toaster;\n    /**\n     * Create a new `Toaster` instance that can be shared around your application.\n     * The `Toaster` will be rendered into a new element appended to the given container.\n     */\n    Toaster.create = function (props, container) {\n        if (container === void 0) { container = document.body; }\n        if (props != null && props.usePortal != null && !isNodeEnv(\"production\")) {\n            console.warn(TOASTER_WARN_INLINE);\n        }\n        var containerElement = document.createElement(\"div\");\n        container.appendChild(containerElement);\n        var toaster = ReactDOM.render(React.createElement(Toaster_1, __assign({}, props, { usePortal: false })), containerElement);\n        if (toaster == null) {\n            throw new Error(TOASTER_CREATE_NULL);\n        }\n        return toaster;\n    };\n    Toaster.prototype.show = function (props, key) {\n        if (this.props.maxToasts) {\n            // check if active number of toasts are at the maxToasts limit\n            this.dismissIfAtLimit();\n        }\n        var options = this.createToastOptions(props, key);\n        if (key === undefined || this.isNewToastKey(key)) {\n            this.setState(function (prevState) { return ({\n                toasts: __spreadArrays([options], prevState.toasts),\n            }); });\n        }\n        else {\n            this.setState(function (prevState) { return ({\n                toasts: prevState.toasts.map(function (t) { return (t.key === key ? options : t); }),\n            }); });\n        }\n        return options.key;\n    };\n    Toaster.prototype.dismiss = function (key, timeoutExpired) {\n        if (timeoutExpired === void 0) { timeoutExpired = false; }\n        this.setState(function (_a) {\n            var toasts = _a.toasts;\n            return ({\n                toasts: toasts.filter(function (t) {\n                    var _a;\n                    var matchesKey = t.key === key;\n                    if (matchesKey) {\n                        (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, timeoutExpired);\n                    }\n                    return !matchesKey;\n                }),\n            });\n        });\n    };\n    Toaster.prototype.clear = function () {\n        this.state.toasts.forEach(function (t) { var _a; return (_a = t.onDismiss) === null || _a === void 0 ? void 0 : _a.call(t, false); });\n        this.setState({ toasts: [] });\n    };\n    Toaster.prototype.getToasts = function () {\n        return this.state.toasts;\n    };\n    Toaster.prototype.render = function () {\n        var classes = classNames(Classes.TOAST_CONTAINER, this.getPositionClasses(), this.props.className);\n        return (React.createElement(Overlay, { autoFocus: this.props.autoFocus, canEscapeKeyClose: this.props.canEscapeKeyClear, canOutsideClickClose: false, className: classes, enforceFocus: false, hasBackdrop: false, isOpen: this.state.toasts.length > 0 || this.props.children != null, onClose: this.handleClose, \n            // $pt-transition-duration * 3 + $pt-transition-duration / 2\n            transitionDuration: 350, transitionName: Classes.TOAST, usePortal: this.props.usePortal },\n            this.state.toasts.map(this.renderToast, this),\n            this.props.children));\n    };\n    Toaster.prototype.validateProps = function (_a) {\n        var maxToasts = _a.maxToasts;\n        // maximum number of toasts should not be a number less than 1\n        if (maxToasts !== undefined && maxToasts < 1) {\n            throw new Error(TOASTER_MAX_TOASTS_INVALID);\n        }\n    };\n    Toaster.prototype.isNewToastKey = function (key) {\n        return this.state.toasts.every(function (toast) { return toast.key !== key; });\n    };\n    Toaster.prototype.dismissIfAtLimit = function () {\n        if (this.state.toasts.length === this.props.maxToasts) {\n            // dismiss the oldest toast to stay within the maxToasts limit\n            this.dismiss(this.state.toasts[this.state.toasts.length - 1].key);\n        }\n    };\n    Toaster.prototype.createToastOptions = function (props, key) {\n        if (key === void 0) { key = \"toast-\" + this.toastId++; }\n        // clone the object before adding the key prop to avoid leaking the mutation\n        return __assign(__assign({}, props), { key: key });\n    };\n    Toaster.prototype.getPositionClasses = function () {\n        var positions = this.props.position.split(\"-\");\n        // NOTE that there is no -center class because that's the default style\n        return __spreadArrays(positions.map(function (p) { return Classes.TOAST_CONTAINER + \"-\" + p.toLowerCase(); }), [\n            Classes.TOAST_CONTAINER + \"-\" + (this.props.usePortal ? \"in-portal\" : \"inline\"),\n        ]);\n    };\n    var Toaster_1;\n    Toaster.displayName = DISPLAYNAME_PREFIX + \".Toaster\";\n    Toaster.defaultProps = {\n        autoFocus: false,\n        canEscapeKeyClear: true,\n        position: Position.TOP,\n        usePortal: true,\n    };\n    Toaster = Toaster_1 = __decorate([\n        polyfill\n    ], Toaster);\n    return Toaster;\n}(AbstractPureComponent2));\nexport { Toaster };\n//# sourceMappingURL=toaster.js.map"]},"metadata":{},"sourceType":"module"}