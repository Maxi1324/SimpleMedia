{"ast":null,"code":"/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX, removeNonHTMLProps } from \"../../common/props\";\nimport { Icon } from \"../icon/icon\";\nimport { AsyncControllableInput } from \"./asyncControllableInput\";\n\nvar InputGroup =\n/** @class */\nfunction (_super) {\n  __extends(InputGroup, _super);\n\n  function InputGroup() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.state = {};\n    _this.leftElement = null;\n    _this.rightElement = null;\n    _this.refHandlers = {\n      leftElement: function (ref) {\n        return _this.leftElement = ref;\n      },\n      rightElement: function (ref) {\n        return _this.rightElement = ref;\n      }\n    };\n    return _this;\n  }\n\n  InputGroup.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        _c = _b.asyncControl,\n        asyncControl = _c === void 0 ? false : _c,\n        className = _b.className,\n        disabled = _b.disabled,\n        fill = _b.fill,\n        inputRef = _b.inputRef,\n        intent = _b.intent,\n        large = _b.large,\n        small = _b.small,\n        round = _b.round;\n    var inputGroupClasses = classNames(Classes.INPUT_GROUP, Classes.intentClass(intent), (_a = {}, _a[Classes.DISABLED] = disabled, _a[Classes.FILL] = fill, _a[Classes.LARGE] = large, _a[Classes.SMALL] = small, _a[Classes.ROUND] = round, _a), className);\n\n    var style = __assign(__assign({}, this.props.style), {\n      paddingLeft: this.state.leftElementWidth,\n      paddingRight: this.state.rightElementWidth\n    });\n\n    var inputProps = __assign(__assign({\n      type: \"text\"\n    }, removeNonHTMLProps(this.props)), {\n      className: Classes.INPUT,\n      style: style\n    });\n\n    return React.createElement(\"div\", {\n      className: inputGroupClasses\n    }, this.maybeRenderLeftElement(), asyncControl ? React.createElement(AsyncControllableInput, __assign({}, inputProps, {\n      inputRef: inputRef\n    })) : React.createElement(\"input\", __assign({}, inputProps, {\n      ref: inputRef\n    })), this.maybeRenderRightElement());\n  };\n\n  InputGroup.prototype.componentDidMount = function () {\n    this.updateInputWidth();\n  };\n\n  InputGroup.prototype.componentDidUpdate = function (prevProps) {\n    var _a = this.props,\n        leftElement = _a.leftElement,\n        rightElement = _a.rightElement;\n\n    if (prevProps.leftElement !== leftElement || prevProps.rightElement !== rightElement) {\n      this.updateInputWidth();\n    }\n  };\n\n  InputGroup.prototype.validateProps = function (props) {\n    if (props.leftElement != null && props.leftIcon != null) {\n      console.warn(Errors.INPUT_WARN_LEFT_ELEMENT_LEFT_ICON_MUTEX);\n    }\n  };\n\n  InputGroup.prototype.maybeRenderLeftElement = function () {\n    var _a = this.props,\n        leftElement = _a.leftElement,\n        leftIcon = _a.leftIcon;\n\n    if (leftElement != null) {\n      return React.createElement(\"span\", {\n        className: Classes.INPUT_LEFT_CONTAINER,\n        ref: this.refHandlers.leftElement\n      }, leftElement);\n    } else if (leftIcon != null) {\n      return React.createElement(Icon, {\n        icon: leftIcon\n      });\n    }\n\n    return undefined;\n  };\n\n  InputGroup.prototype.maybeRenderRightElement = function () {\n    var rightElement = this.props.rightElement;\n\n    if (rightElement == null) {\n      return undefined;\n    }\n\n    return React.createElement(\"span\", {\n      className: Classes.INPUT_ACTION,\n      ref: this.refHandlers.rightElement\n    }, rightElement);\n  };\n\n  InputGroup.prototype.updateInputWidth = function () {\n    var _a = this.state,\n        leftElementWidth = _a.leftElementWidth,\n        rightElementWidth = _a.rightElementWidth;\n\n    if (this.leftElement != null) {\n      var clientWidth = this.leftElement.clientWidth; // small threshold to prevent infinite loops\n\n      if (leftElementWidth === undefined || Math.abs(clientWidth - leftElementWidth) > 2) {\n        this.setState({\n          leftElementWidth: clientWidth\n        });\n      }\n    } else {\n      this.setState({\n        leftElementWidth: undefined\n      });\n    }\n\n    if (this.rightElement != null) {\n      var clientWidth = this.rightElement.clientWidth; // small threshold to prevent infinite loops\n\n      if (rightElementWidth === undefined || Math.abs(clientWidth - rightElementWidth) > 2) {\n        this.setState({\n          rightElementWidth: clientWidth\n        });\n      }\n    } else {\n      this.setState({\n        rightElementWidth: undefined\n      });\n    }\n  };\n\n  InputGroup.displayName = DISPLAYNAME_PREFIX + \".InputGroup\";\n  InputGroup = __decorate([polyfill], InputGroup);\n  return InputGroup;\n}(AbstractPureComponent2);\n\nexport { InputGroup };","map":{"version":3,"sources":["../../../../src/components/forms/inputGroup.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SAAS,sBAAT,EAAiC,OAAjC,QAAsD,cAAtD;AACA,OAAO,KAAK,MAAZ,MAAwB,qBAAxB;AACA,SACI,kBADJ,EAQI,kBARJ,QASO,oBATP;AAUA,SAAS,IAAT,QAA+B,cAA/B;AACA,SAAS,sBAAT,QAAuC,0BAAvC;;AAyJA,IAAA,UAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAgC,EAAA,SAAA,CAAA,UAAA,EAAA,MAAA,CAAA;;AAAhC,WAAA,UAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AAGW,IAAA,KAAA,CAAA,KAAA,GAA0B,EAA1B;AAEC,IAAA,KAAA,CAAA,WAAA,GAAkC,IAAlC;AAEA,IAAA,KAAA,CAAA,YAAA,GAAmC,IAAnC;AAEA,IAAA,KAAA,CAAA,WAAA,GAAc;AAClB,MAAA,WAAW,EAAE,UAAC,GAAD,EAA4B;AAAK,eAAC,KAAI,CAAC,WAAL,GAAD,GAAA;AAAwB,OADpD;AAElB,MAAA,YAAY,EAAE,UAAC,GAAD,EAA4B;AAAK,eAAC,KAAI,CAAC,YAAL,GAAD,GAAA;AAAyB;AAFtD,KAAd;;AAgHX;;AA3GU,EAAA,UAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;;;AACU,QAAA,EAAA,GAA6F,KAAK,KAAlG;AAAA,QAAE,EAAA,GAAA,EAAA,CAAA,YAAF;AAAA,QAAE,YAAY,GAAA,EAAA,KAAA,KAAA,CAAA,GAAG,KAAH,GAAQ,EAAtB;AAAA,QAAwB,SAAS,GAAA,EAAA,CAAA,SAAjC;AAAA,QAAmC,QAAQ,GAAA,EAAA,CAAA,QAA3C;AAAA,QAA6C,IAAI,GAAA,EAAA,CAAA,IAAjD;AAAA,QAAmD,QAAQ,GAAA,EAAA,CAAA,QAA3D;AAAA,QAA6D,MAAM,GAAA,EAAA,CAAA,MAAnE;AAAA,QAAqE,KAAK,GAAA,EAAA,CAAA,KAA1E;AAAA,QAA4E,KAAK,GAAA,EAAA,CAAA,KAAjF;AAAA,QAAmF,KAAK,GAAA,EAAA,CAAA,KAAxF;AACN,QAAM,iBAAiB,GAAG,UAAU,CAChC,OAAO,CAAC,WADwB,EAEhC,OAAO,CAAC,WAAR,CAAoB,MAApB,CAFgC,GAEL,EAAA,GAAA,EAAA,EAEvB,EAAA,CAAC,OAAO,CAAC,QAAT,CAAA,GAAoB,QAFG,EAGvB,EAAA,CAAC,OAAO,CAAC,IAAT,CAAA,GAAgB,IAHO,EAIvB,EAAA,CAAC,OAAO,CAAC,KAAT,CAAA,GAAiB,KAJM,EAKvB,EAAA,CAAC,OAAO,CAAC,KAAT,CAAA,GAAiB,KALM,EAMvB,EAAA,CAAC,OAAO,CAAC,KAAT,CAAA,GAAiB,KANM,E,EAFK,GAUhC,SAVgC,CAApC;;AAYA,QAAM,KAAK,GAAA,QAAA,CAAA,QAAA,CAAA,EAAA,EACJ,KAAK,KAAL,CAAW,KADP,CAAA,EACY;AACnB,MAAA,WAAW,EAAE,KAAK,KAAL,CAAW,gBADL;AAEnB,MAAA,YAAY,EAAE,KAAK,KAAL,CAAW;AAFN,KADZ,CAAX;;AAKA,QAAM,UAAU,GAAA,QAAA,CAAA,QAAA,CAAA;AACZ,MAAA,IAAI,EAAE;AADM,KAAA,EAET,kBAAkB,CAAC,KAAK,KAAN,CAFT,CAAA,EAEqB;AACjC,MAAA,SAAS,EAAE,OAAO,CAAC,KADc;AAEjC,MAAA,KAAK,EAAA;AAF4B,KAFrB,CAAhB;;AAOA,WACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE;AAAhB,KAAA,EACK,KAAK,sBAAL,EADL,EAEK,YAAY,GACT,KAAA,CAAA,aAAA,CAAC,sBAAD,EAAuB,QAAA,CAAA,EAAA,EAAK,UAAL,EAAe;AAAE,MAAA,QAAQ,EAAE;AAAZ,KAAf,CAAvB,CADS,GAGT,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAW,UAAX,EAAqB;AAAE,MAAA,GAAG,EAAE;AAAP,KAArB,CAAA,CALR,EAOK,KAAK,uBAAL,EAPL,CADJ;AAWH,GArCM;;AAuCA,EAAA,UAAA,CAAA,SAAA,CAAA,iBAAA,GAAP,YAAA;AACI,SAAK,gBAAL;AACH,GAFM;;AAIA,EAAA,UAAA,CAAA,SAAA,CAAA,kBAAA,GAAP,UAA0B,SAA1B,EAAsD;AAC5C,QAAA,EAAA,GAAgC,KAAK,KAArC;AAAA,QAAE,WAAW,GAAA,EAAA,CAAA,WAAb;AAAA,QAAe,YAAY,GAAA,EAAA,CAAA,YAA3B;;AACN,QAAI,SAAS,CAAC,WAAV,KAA0B,WAA1B,IAAyC,SAAS,CAAC,YAAV,KAA2B,YAAxE,EAAsF;AAClF,WAAK,gBAAL;AACH;AACJ,GALM;;AAOG,EAAA,UAAA,CAAA,SAAA,CAAA,aAAA,GAAV,UAAwB,KAAxB,EAAgD;AAC5C,QAAI,KAAK,CAAC,WAAN,IAAqB,IAArB,IAA6B,KAAK,CAAC,QAAN,IAAkB,IAAnD,EAAyD;AACrD,MAAA,OAAO,CAAC,IAAR,CAAa,MAAM,CAAC,uCAApB;AACH;AACJ,GAJS;;AAMF,EAAA,UAAA,CAAA,SAAA,CAAA,sBAAA,GAAR,YAAA;AACU,QAAA,EAAA,GAA4B,KAAK,KAAjC;AAAA,QAAE,WAAW,GAAA,EAAA,CAAA,WAAb;AAAA,QAAe,QAAQ,GAAA,EAAA,CAAA,QAAvB;;AAEN,QAAI,WAAW,IAAI,IAAnB,EAAyB;AACrB,aACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,QAAA,SAAS,EAAE,OAAO,CAAC,oBAAzB;AAA+C,QAAA,GAAG,EAAE,KAAK,WAAL,CAAiB;AAArE,OAAA,EACK,WADL,CADJ;AAKH,KAND,MAMO,IAAI,QAAQ,IAAI,IAAhB,EAAsB;AACzB,aAAO,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,QAAA,IAAI,EAAE;AAAP,OAAL,CAAP;AACH;;AAED,WAAO,SAAP;AACH,GAdO;;AAgBA,EAAA,UAAA,CAAA,SAAA,CAAA,uBAAA,GAAR,YAAA;AACY,QAAA,YAAY,GAAK,KAAK,KAAL,CAAL,YAAZ;;AACR,QAAI,YAAY,IAAI,IAApB,EAA0B;AACtB,aAAO,SAAP;AACH;;AACD,WACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA;AAAM,MAAA,SAAS,EAAE,OAAO,CAAC,YAAzB;AAAuC,MAAA,GAAG,EAAE,KAAK,WAAL,CAAiB;AAA7D,KAAA,EACK,YADL,CADJ;AAKH,GAVO;;AAYA,EAAA,UAAA,CAAA,SAAA,CAAA,gBAAA,GAAR,YAAA;AACU,QAAA,EAAA,GAA0C,KAAK,KAA/C;AAAA,QAAE,gBAAgB,GAAA,EAAA,CAAA,gBAAlB;AAAA,QAAoB,iBAAiB,GAAA,EAAA,CAAA,iBAArC;;AAEN,QAAI,KAAK,WAAL,IAAoB,IAAxB,EAA8B;AAClB,UAAA,WAAW,GAAK,KAAK,WAAL,CAAL,WAAX,CADkB,CAE1B;;AACA,UAAI,gBAAgB,KAAK,SAArB,IAAkC,IAAI,CAAC,GAAL,CAAS,WAAW,GAAG,gBAAvB,IAA2C,CAAjF,EAAoF;AAChF,aAAK,QAAL,CAAc;AAAE,UAAA,gBAAgB,EAAE;AAApB,SAAd;AACH;AACJ,KAND,MAMO;AACH,WAAK,QAAL,CAAc;AAAE,QAAA,gBAAgB,EAAE;AAApB,OAAd;AACH;;AAED,QAAI,KAAK,YAAL,IAAqB,IAAzB,EAA+B;AACnB,UAAA,WAAW,GAAK,KAAK,YAAL,CAAL,WAAX,CADmB,CAE3B;;AACA,UAAI,iBAAiB,KAAK,SAAtB,IAAmC,IAAI,CAAC,GAAL,CAAS,WAAW,GAAG,iBAAvB,IAA4C,CAAnF,EAAsF;AAClF,aAAK,QAAL,CAAc;AAAE,UAAA,iBAAiB,EAAE;AAArB,SAAd;AACH;AACJ,KAND,MAMO;AACH,WAAK,QAAL,CAAc;AAAE,QAAA,iBAAiB,EAAE;AAArB,OAAd;AACH;AACJ,GAtBO;;AAjGM,EAAA,UAAA,CAAA,WAAA,GAAiB,kBAAkB,GAAA,aAAnC;AADL,EAAA,UAAU,GAAA,UAAA,CAAA,CADtB,QACsB,CAAA,EAAV,UAAU,CAAV;AAyHb,SAAA,UAAA;AAAC,CAzHD,CAAgC,sBAAhC,CAAA;;SAAa,U","sourceRoot":"","sourcesContent":["/*\n * Copyright 2016 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport * as Errors from \"../../common/errors\";\nimport { DISPLAYNAME_PREFIX, removeNonHTMLProps, } from \"../../common/props\";\nimport { Icon } from \"../icon/icon\";\nimport { AsyncControllableInput } from \"./asyncControllableInput\";\nvar InputGroup = /** @class */ (function (_super) {\n    __extends(InputGroup, _super);\n    function InputGroup() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.state = {};\n        _this.leftElement = null;\n        _this.rightElement = null;\n        _this.refHandlers = {\n            leftElement: function (ref) { return (_this.leftElement = ref); },\n            rightElement: function (ref) { return (_this.rightElement = ref); },\n        };\n        return _this;\n    }\n    InputGroup.prototype.render = function () {\n        var _a;\n        var _b = this.props, _c = _b.asyncControl, asyncControl = _c === void 0 ? false : _c, className = _b.className, disabled = _b.disabled, fill = _b.fill, inputRef = _b.inputRef, intent = _b.intent, large = _b.large, small = _b.small, round = _b.round;\n        var inputGroupClasses = classNames(Classes.INPUT_GROUP, Classes.intentClass(intent), (_a = {},\n            _a[Classes.DISABLED] = disabled,\n            _a[Classes.FILL] = fill,\n            _a[Classes.LARGE] = large,\n            _a[Classes.SMALL] = small,\n            _a[Classes.ROUND] = round,\n            _a), className);\n        var style = __assign(__assign({}, this.props.style), { paddingLeft: this.state.leftElementWidth, paddingRight: this.state.rightElementWidth });\n        var inputProps = __assign(__assign({ type: \"text\" }, removeNonHTMLProps(this.props)), { className: Classes.INPUT, style: style });\n        return (React.createElement(\"div\", { className: inputGroupClasses },\n            this.maybeRenderLeftElement(),\n            asyncControl ? (React.createElement(AsyncControllableInput, __assign({}, inputProps, { inputRef: inputRef }))) : (React.createElement(\"input\", __assign({}, inputProps, { ref: inputRef }))),\n            this.maybeRenderRightElement()));\n    };\n    InputGroup.prototype.componentDidMount = function () {\n        this.updateInputWidth();\n    };\n    InputGroup.prototype.componentDidUpdate = function (prevProps) {\n        var _a = this.props, leftElement = _a.leftElement, rightElement = _a.rightElement;\n        if (prevProps.leftElement !== leftElement || prevProps.rightElement !== rightElement) {\n            this.updateInputWidth();\n        }\n    };\n    InputGroup.prototype.validateProps = function (props) {\n        if (props.leftElement != null && props.leftIcon != null) {\n            console.warn(Errors.INPUT_WARN_LEFT_ELEMENT_LEFT_ICON_MUTEX);\n        }\n    };\n    InputGroup.prototype.maybeRenderLeftElement = function () {\n        var _a = this.props, leftElement = _a.leftElement, leftIcon = _a.leftIcon;\n        if (leftElement != null) {\n            return (React.createElement(\"span\", { className: Classes.INPUT_LEFT_CONTAINER, ref: this.refHandlers.leftElement }, leftElement));\n        }\n        else if (leftIcon != null) {\n            return React.createElement(Icon, { icon: leftIcon });\n        }\n        return undefined;\n    };\n    InputGroup.prototype.maybeRenderRightElement = function () {\n        var rightElement = this.props.rightElement;\n        if (rightElement == null) {\n            return undefined;\n        }\n        return (React.createElement(\"span\", { className: Classes.INPUT_ACTION, ref: this.refHandlers.rightElement }, rightElement));\n    };\n    InputGroup.prototype.updateInputWidth = function () {\n        var _a = this.state, leftElementWidth = _a.leftElementWidth, rightElementWidth = _a.rightElementWidth;\n        if (this.leftElement != null) {\n            var clientWidth = this.leftElement.clientWidth;\n            // small threshold to prevent infinite loops\n            if (leftElementWidth === undefined || Math.abs(clientWidth - leftElementWidth) > 2) {\n                this.setState({ leftElementWidth: clientWidth });\n            }\n        }\n        else {\n            this.setState({ leftElementWidth: undefined });\n        }\n        if (this.rightElement != null) {\n            var clientWidth = this.rightElement.clientWidth;\n            // small threshold to prevent infinite loops\n            if (rightElementWidth === undefined || Math.abs(clientWidth - rightElementWidth) > 2) {\n                this.setState({ rightElementWidth: clientWidth });\n            }\n        }\n        else {\n            this.setState({ rightElementWidth: undefined });\n        }\n    };\n    InputGroup.displayName = DISPLAYNAME_PREFIX + \".InputGroup\";\n    InputGroup = __decorate([\n        polyfill\n    ], InputGroup);\n    return InputGroup;\n}(AbstractPureComponent2));\nexport { InputGroup };\n//# sourceMappingURL=inputGroup.js.map"]},"metadata":{},"sourceType":"module"}