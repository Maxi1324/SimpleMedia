{"ast":null,"code":"/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\n/**\n * Returns true if `node` is null/undefined, false, empty string, or an array\n * composed of those. If `node` is an array, only one level of the array is\n * checked, for performance reasons.\n */\n\nexport function isReactNodeEmpty(node, skipArray) {\n  if (skipArray === void 0) {\n    skipArray = false;\n  }\n\n  return node == null || node === \"\" || node === false || !skipArray && Array.isArray(node) && ( // only recurse one level through arrays, for performance\n  node.length === 0 || node.every(function (n) {\n    return isReactNodeEmpty(n, true);\n  }));\n}\n/**\n * Returns true if children are a mappable children array\n *\n * @internal\n */\n\nexport function isReactChildrenElementOrElements(children) {\n  return !isReactNodeEmpty(children, true) && children !== true;\n}\n/**\n * Converts a React node to an element: non-empty string or number or\n * `React.Fragment` (React 16.3+) is wrapped in given tag name; empty strings\n * and booleans are discarded.\n */\n\nexport function ensureElement(child, tagName) {\n  if (tagName === void 0) {\n    tagName = \"span\";\n  }\n\n  if (child == null || typeof child === \"boolean\") {\n    return undefined;\n  } else if (typeof child === \"string\") {\n    // cull whitespace strings\n    return child.trim().length > 0 ? React.createElement(tagName, {}, child) : undefined;\n  } else if (typeof child === \"number\" || typeof child.type === \"symbol\" || Array.isArray(child)) {\n    // React.Fragment has a symbol type, ReactNodeArray extends from Array\n    return React.createElement(tagName, {}, child);\n  } else if (isReactElement(child)) {\n    return child;\n  } else {\n    // child is inferred as {}\n    return undefined;\n  }\n}\nexport function isReactElement(child) {\n  return typeof child === \"object\" && typeof child.type !== \"undefined\" && typeof child.props !== \"undefined\";\n}\nexport function getDisplayName(ComponentClass) {\n  return ComponentClass.displayName || ComponentClass.name || \"Unknown\";\n}\n/**\n * Returns true if the given JSX element matches the given component type.\n *\n * NOTE: This function only checks equality of `displayName` for performance and\n * to tolerate multiple minor versions of a component being included in one\n * application bundle.\n *\n * @param element JSX element in question\n * @param ComponentType desired component type of element\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\n\nexport function isElementOfType(element, ComponentType) {\n  return element != null && element.type != null && element.type.displayName != null && element.type.displayName === ComponentType.displayName;\n}\n/**\n * Returns React.createRef if it's available, or a ref-like object if not.\n */\n\nexport function createReactRef() {\n  return typeof React.createRef !== \"undefined\" ? React.createRef() : {\n    current: null\n  };\n}","map":{"version":3,"sources":["../../../../src/common/utils/reactUtils.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AAEH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AAEA;;;;AAIG;;AACH,OAAM,SAAU,gBAAV,CAA2B,IAA3B,EAAmD,SAAnD,EAAoE;AAAjB,MAAA,SAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,SAAA,GAAA,KAAA;AAAiB;;AACtE,SACI,IAAI,IAAI,IAAR,IACA,IAAI,KAAK,EADT,IAEA,IAAI,KAAK,KAFT,IAGC,CAAC,SAAD,IACG,KAAK,CAAC,OAAN,CAAc,IAAd,CADH,MAEG;AACC,EAAA,IAAI,CAAC,MAAL,KAAgB,CAAhB,IAAqB,IAAI,CAAC,KAAL,CAAW,UAAA,CAAA,EAAC;AAAI,WAAA,gBAAgB,CAAC,CAAD,EAAhB,IAAgB,CAAhB;AAAyB,GAAzC,CAHzB,CAJL;AASH;AAED;;;;AAIG;;AACH,OAAM,SAAU,gCAAV,CAA2C,QAA3C,EAAoE;AACtE,SAAO,CAAC,gBAAgB,CAAC,QAAD,EAAW,IAAX,CAAjB,IAAqC,QAAQ,KAAK,IAAzD;AACH;AAED;;;;AAIG;;AACH,OAAM,SAAU,aAAV,CAAwB,KAAxB,EAA4D,OAA5D,EAAyG;AAA7C,MAAA,OAAA,KAAA,KAAA,CAAA,EAAA;AAAA,IAAA,OAAA,GAAA,MAAA;AAA6C;;AAC3G,MAAI,KAAK,IAAI,IAAT,IAAiB,OAAO,KAAP,KAAiB,SAAtC,EAAiD;AAC7C,WAAO,SAAP;AACH,GAFD,MAEO,IAAI,OAAO,KAAP,KAAiB,QAArB,EAA+B;AAClC;AACA,WAAO,KAAK,CAAC,IAAN,GAAa,MAAb,GAAsB,CAAtB,GAA0B,KAAK,CAAC,aAAN,CAAoB,OAApB,EAA6B,EAA7B,EAAiC,KAAjC,CAA1B,GAAoE,SAA3E;AACH,GAHM,MAGA,IAAI,OAAO,KAAP,KAAiB,QAAjB,IAA6B,OAAQ,KAAa,CAAC,IAAtB,KAA+B,QAA5D,IAAwE,KAAK,CAAC,OAAN,CAAc,KAAd,CAA5E,EAAkG;AACrG;AACA,WAAO,KAAK,CAAC,aAAN,CAAoB,OAApB,EAA6B,EAA7B,EAAiC,KAAjC,CAAP;AACH,GAHM,MAGA,IAAI,cAAc,CAAC,KAAD,CAAlB,EAA2B;AAC9B,WAAO,KAAP;AACH,GAFM,MAEA;AACH;AACA,WAAO,SAAP;AACH;AACJ;AAED,OAAM,SAAU,cAAV,CAAkC,KAAlC,EAAwD;AAC1D,SACI,OAAO,KAAP,KAAiB,QAAjB,IACA,OAAQ,KAAa,CAAC,IAAtB,KAA+B,WAD/B,IAEA,OAAQ,KAAa,CAAC,KAAtB,KAAgC,WAHpC;AAKH;AASD,OAAM,SAAU,cAAV,CAAyB,cAAzB,EAAqE;AACvE,SAAQ,cAAsC,CAAC,WAAvC,IAAuD,cAAyB,CAAC,IAAjF,IAAyF,SAAjG;AACH;AAED;;;;;;;;;AASG;AACH;;AACA,OAAM,SAAU,eAAV,CACF,OADE,EAEF,aAFE,EAEmC;AAErC,SACI,OAAO,IAAI,IAAX,IACA,OAAO,CAAC,IAAR,IAAgB,IADhB,IAEA,OAAO,CAAC,IAAR,CAAa,WAAb,IAA4B,IAF5B,IAGA,OAAO,CAAC,IAAR,CAAa,WAAb,KAA6B,aAAa,CAAC,WAJ/C;AAMH;AAED;;AAEG;;AACH,OAAM,SAAU,cAAV,GAAwB;AAC1B,SAAO,OAAO,KAAK,CAAC,SAAb,KAA2B,WAA3B,GAAyC,KAAK,CAAC,SAAN,EAAzC,GAAgE;AAAE,IAAA,OAAO,EAAE;AAAX,GAAvE;AACH","sourceRoot":"","sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport * as React from \"react\";\n/**\n * Returns true if `node` is null/undefined, false, empty string, or an array\n * composed of those. If `node` is an array, only one level of the array is\n * checked, for performance reasons.\n */\nexport function isReactNodeEmpty(node, skipArray) {\n    if (skipArray === void 0) { skipArray = false; }\n    return (node == null ||\n        node === \"\" ||\n        node === false ||\n        (!skipArray &&\n            Array.isArray(node) &&\n            // only recurse one level through arrays, for performance\n            (node.length === 0 || node.every(function (n) { return isReactNodeEmpty(n, true); }))));\n}\n/**\n * Returns true if children are a mappable children array\n *\n * @internal\n */\nexport function isReactChildrenElementOrElements(children) {\n    return !isReactNodeEmpty(children, true) && children !== true;\n}\n/**\n * Converts a React node to an element: non-empty string or number or\n * `React.Fragment` (React 16.3+) is wrapped in given tag name; empty strings\n * and booleans are discarded.\n */\nexport function ensureElement(child, tagName) {\n    if (tagName === void 0) { tagName = \"span\"; }\n    if (child == null || typeof child === \"boolean\") {\n        return undefined;\n    }\n    else if (typeof child === \"string\") {\n        // cull whitespace strings\n        return child.trim().length > 0 ? React.createElement(tagName, {}, child) : undefined;\n    }\n    else if (typeof child === \"number\" || typeof child.type === \"symbol\" || Array.isArray(child)) {\n        // React.Fragment has a symbol type, ReactNodeArray extends from Array\n        return React.createElement(tagName, {}, child);\n    }\n    else if (isReactElement(child)) {\n        return child;\n    }\n    else {\n        // child is inferred as {}\n        return undefined;\n    }\n}\nexport function isReactElement(child) {\n    return (typeof child === \"object\" &&\n        typeof child.type !== \"undefined\" &&\n        typeof child.props !== \"undefined\");\n}\nexport function getDisplayName(ComponentClass) {\n    return ComponentClass.displayName || ComponentClass.name || \"Unknown\";\n}\n/**\n * Returns true if the given JSX element matches the given component type.\n *\n * NOTE: This function only checks equality of `displayName` for performance and\n * to tolerate multiple minor versions of a component being included in one\n * application bundle.\n *\n * @param element JSX element in question\n * @param ComponentType desired component type of element\n */\n// eslint-disable-next-line @typescript-eslint/ban-types\nexport function isElementOfType(element, ComponentType) {\n    return (element != null &&\n        element.type != null &&\n        element.type.displayName != null &&\n        element.type.displayName === ComponentType.displayName);\n}\n/**\n * Returns React.createRef if it's available, or a ref-like object if not.\n */\nexport function createReactRef() {\n    return typeof React.createRef !== \"undefined\" ? React.createRef() : { current: null };\n}\n//# sourceMappingURL=reactUtils.js.map"]},"metadata":{},"sourceType":"module"}