{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { Button } from \"../button/buttons\";\nimport { Text } from \"../text/text\";\n\nvar PanelView =\n/** @class */\nfunction (_super) {\n  __extends(PanelView, _super);\n\n  function PanelView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleClose = function () {\n      return _this.props.onClose(_this.props.panel);\n    };\n\n    return _this;\n  }\n\n  PanelView.prototype.render = function () {\n    var _a = this.props,\n        panel = _a.panel,\n        onOpen = _a.onOpen; // two <span> tags in header ensure title is centered as long as\n    // possible, due to `flex: 1` magic.\n\n    return React.createElement(\"div\", {\n      className: Classes.PANEL_STACK_VIEW\n    }, this.maybeRenderHeader(), React.createElement(panel.component, __assign({\n      openPanel: onOpen,\n      closePanel: this.handleClose\n    }, panel.props)));\n  };\n\n  PanelView.prototype.maybeRenderHeader = function () {\n    if (!this.props.showHeader) {\n      return null;\n    }\n\n    return React.createElement(\"div\", {\n      className: Classes.PANEL_STACK_HEADER\n    }, React.createElement(\"span\", null, this.maybeRenderBack()), React.createElement(Text, {\n      className: Classes.HEADING,\n      ellipsize: true,\n      title: this.props.panel.htmlTitle\n    }, this.props.panel.title), React.createElement(\"span\", null));\n  };\n\n  PanelView.prototype.maybeRenderBack = function () {\n    if (this.props.previousPanel === undefined) {\n      return null;\n    }\n\n    return React.createElement(Button, {\n      className: Classes.PANEL_STACK_HEADER_BACK,\n      icon: \"chevron-left\",\n      minimal: true,\n      onClick: this.handleClose,\n      small: true,\n      text: this.props.previousPanel.title,\n      title: this.props.previousPanel.htmlTitle\n    });\n  };\n\n  PanelView = __decorate([polyfill], PanelView);\n  return PanelView;\n}(AbstractPureComponent2);\n\nexport { PanelView };","map":{"version":3,"sources":["../../../../src/components/panel-stack/panelView.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SAAS,sBAAT,EAAiC,OAAjC,QAAgD,cAAhD;AACA,SAAS,MAAT,QAAuB,mBAAvB;AACA,SAAS,IAAT,QAAqB,cAArB;;AA6BA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAA/B,WAAA,SAAA,GAAA;AAAA,QAAA,KAAA,GAAA,MAAA,KAAA,IAAA,IAAA,MAAA,CAAA,KAAA,CAAA,IAAA,EAAA,SAAA,CAAA,IAAA,IAAA;;AA6CY,IAAA,KAAA,CAAA,WAAA,GAAc,YAAA;AAAM,aAAA,KAAI,CAAC,KAAL,CAAW,OAAX,CAAmB,KAAI,CAAC,KAAL,CAAnB,KAAA,CAAA;AAAoC,KAAxD;;;AACX;;AA7CU,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;AACU,QAAA,EAAA,GAAoB,KAAK,KAAzB;AAAA,QAAE,KAAK,GAAA,EAAA,CAAA,KAAP;AAAA,QAAS,MAAM,GAAA,EAAA,CAAA,MAAf,CADV,CAEI;AACA;;AACA,WACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,KAAA,EACK,KAAK,iBAAL,EADL,EAEI,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,SAAP,EAAgB,QAAA,CAAA;AAAC,MAAA,SAAS,EAAE,MAAZ;AAAoB,MAAA,UAAU,EAAE,KAAK;AAArC,KAAA,EAAsD,KAAK,CAAC,KAA5D,CAAhB,CAFJ,CADJ;AAMH,GAVM;;AAYC,EAAA,SAAA,CAAA,SAAA,CAAA,iBAAA,GAAR,YAAA;AACI,QAAI,CAAC,KAAK,KAAL,CAAW,UAAhB,EAA4B;AACxB,aAAO,IAAP;AACH;;AACD,WACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,MAAA,SAAS,EAAE,OAAO,CAAC;AAAxB,KAAA,EACI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAO,KAAK,eAAL,EAAP,CADJ,EAEI,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,MAAA,SAAS,EAAE,OAAO,CAAC,OAApB;AAA6B,MAAA,SAAS,EAAE,IAAxC;AAA8C,MAAA,KAAK,EAAE,KAAK,KAAL,CAAW,KAAX,CAAiB;AAAtE,KAAL,EACK,KAAK,KAAL,CAAW,KAAX,CAAiB,KADtB,CAFJ,EAKI,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,CALJ,CADJ;AASH,GAbO;;AAeA,EAAA,SAAA,CAAA,SAAA,CAAA,eAAA,GAAR,YAAA;AACI,QAAI,KAAK,KAAL,CAAW,aAAX,KAA6B,SAAjC,EAA4C;AACxC,aAAO,IAAP;AACH;;AACD,WACI,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AACH,MAAA,SAAS,EAAE,OAAO,CAAC,uBADhB;AAEH,MAAA,IAAI,EAAC,cAFF;AAGH,MAAA,OAAO,EAAE,IAHN;AAIH,MAAA,OAAO,EAAE,KAAK,WAJX;AAKH,MAAA,KAAK,EAAE,IALJ;AAMH,MAAA,IAAI,EAAE,KAAK,KAAL,CAAW,aAAX,CAAyB,KAN5B;AAOH,MAAA,KAAK,EAAE,KAAK,KAAL,CAAW,aAAX,CAAyB;AAP7B,KAAP,CADJ;AAWH,GAfO;;AA5BC,EAAA,SAAS,GAAA,UAAA,CAAA,CADrB,QACqB,CAAA,EAAT,SAAS,CAAT;AA8Cb,SAAA,SAAA;AAAC,CA9CD,CAA+B,sBAA/B,CAAA;;SAAa,S","sourceRoot":"","sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends } from \"tslib\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { Button } from \"../button/buttons\";\nimport { Text } from \"../text/text\";\nvar PanelView = /** @class */ (function (_super) {\n    __extends(PanelView, _super);\n    function PanelView() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleClose = function () { return _this.props.onClose(_this.props.panel); };\n        return _this;\n    }\n    PanelView.prototype.render = function () {\n        var _a = this.props, panel = _a.panel, onOpen = _a.onOpen;\n        // two <span> tags in header ensure title is centered as long as\n        // possible, due to `flex: 1` magic.\n        return (React.createElement(\"div\", { className: Classes.PANEL_STACK_VIEW },\n            this.maybeRenderHeader(),\n            React.createElement(panel.component, __assign({ openPanel: onOpen, closePanel: this.handleClose }, panel.props))));\n    };\n    PanelView.prototype.maybeRenderHeader = function () {\n        if (!this.props.showHeader) {\n            return null;\n        }\n        return (React.createElement(\"div\", { className: Classes.PANEL_STACK_HEADER },\n            React.createElement(\"span\", null, this.maybeRenderBack()),\n            React.createElement(Text, { className: Classes.HEADING, ellipsize: true, title: this.props.panel.htmlTitle }, this.props.panel.title),\n            React.createElement(\"span\", null)));\n    };\n    PanelView.prototype.maybeRenderBack = function () {\n        if (this.props.previousPanel === undefined) {\n            return null;\n        }\n        return (React.createElement(Button, { className: Classes.PANEL_STACK_HEADER_BACK, icon: \"chevron-left\", minimal: true, onClick: this.handleClose, small: true, text: this.props.previousPanel.title, title: this.props.previousPanel.htmlTitle }));\n    };\n    PanelView = __decorate([\n        polyfill\n    ], PanelView);\n    return PanelView;\n}(AbstractPureComponent2));\nexport { PanelView };\n//# sourceMappingURL=panelView.js.map"]},"metadata":{},"sourceType":"module"}