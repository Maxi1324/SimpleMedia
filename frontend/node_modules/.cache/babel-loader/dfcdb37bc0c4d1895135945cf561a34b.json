{"ast":null,"code":"/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function isRefObject(value) {\n  return value != null && typeof value.current !== \"undefined\";\n}\nexport function isRefCallback(value) {\n  return typeof value === \"function\";\n}\nexport function combineRefs(ref1, ref2) {\n  return mergeRefs(ref1, ref2);\n}\nexport function mergeRefs() {\n  var refs = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    refs[_i] = arguments[_i];\n  }\n\n  return function (value) {\n    refs.forEach(function (ref) {\n      if (isRefCallback(ref)) {\n        ref(value);\n      } else if (isRefObject(ref)) {\n        ref.current = value;\n      }\n    });\n  };\n}\nexport function getRef(ref) {\n  var _a;\n\n  if (ref === null) {\n    return null;\n  }\n\n  return (_a = ref.current) !== null && _a !== void 0 ? _a : ref;\n}\n/**\n * Assign the given ref to a target, either a React ref object or a callback which takes the ref as its first argument.\n */\n\nexport function setRef(refTarget, ref) {\n  if (refTarget === undefined) {\n    return;\n  }\n\n  if (isRefObject(refTarget)) {\n    refTarget.current = ref;\n  } else if (isRefCallback(refTarget)) {\n    refTarget(ref);\n  }\n}\nexport function refHandler(refTargetParent, refTargetKey, refProp) {\n  if (isRefObject(refProp)) {\n    refTargetParent[refTargetKey] = refProp;\n    return refProp;\n  }\n\n  return function (ref) {\n    refTargetParent[refTargetKey] = ref;\n\n    if (isRefCallback(refProp)) {\n      refProp(ref);\n    }\n  };\n}","map":{"version":3,"sources":["../../../src/common/refs.ts"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;AASH,OAAM,SAAU,WAAV,CAA6C,KAA7C,EAA8E;AAChF,SAAO,KAAK,IAAI,IAAT,IAAiB,OAAQ,KAAuB,CAAC,OAAhC,KAA4C,WAApE;AACH;AAID,OAAM,SAAU,aAAV,CAA+C,KAA/C,EAAgF;AAClF,SAAO,OAAO,KAAP,KAAiB,UAAxB;AACH;AAED,OAAM,SAAU,WAAV,CAA6C,IAA7C,EAAoE,IAApE,EAAyF;AAC3F,SAAO,SAAS,CAAC,IAAD,EAAO,IAAP,CAAhB;AACH;AAED,OAAM,SAAU,SAAV,GAAmB;AAAwB,MAAA,IAAA,GAAA,EAAA;;OAAA,IAAA,EAAA,GAAA,C,EAAA,EAAA,GAAA,SAAA,CAAA,M,EAAA,EAAA,E,EAA8B;AAA9B,IAAA,IAAA,CAAA,EAAA,CAAA,GAAA,SAAA,CAAA,EAAA,CAAA;;;AAC7C,SAAO,UAAA,KAAA,EAAK;AACR,IAAA,IAAI,CAAC,OAAL,CAAa,UAAA,GAAA,EAAG;AACZ,UAAI,aAAa,CAAC,GAAD,CAAjB,EAAwB;AACpB,QAAA,GAAG,CAAC,KAAD,CAAH;AACH,OAFD,MAEO,IAAI,WAAW,CAAC,GAAD,CAAf,EAAsB;AACzB,QAAA,GAAG,CAAC,OAAJ,GAAc,KAAd;AACH;AACJ,KAND;AAOH,GARD;AASH;AAED,OAAM,SAAU,MAAV,CAAwC,GAAxC,EAAqE;;;AACvE,MAAI,GAAG,KAAK,IAAZ,EAAkB;AACd,WAAO,IAAP;AACH;;AAED,SAAA,CAAA,EAAA,GAAQ,GAAqB,CAAC,OAA9B,MAAqC,IAArC,IAAqC,EAAA,KAAA,KAAA,CAArC,GAAqC,EAArC,GAA0C,GAA1C;AACH;AAED;;AAEG;;AACH,OAAM,SAAU,MAAV,CAAwC,SAAxC,EAAwE,GAAxE,EAAqF;AACvF,MAAI,SAAS,KAAK,SAAlB,EAA6B;AACzB;AACH;;AACD,MAAI,WAAW,CAAI,SAAJ,CAAf,EAA+B;AAC3B,IAAA,SAAS,CAAC,OAAV,GAAoB,GAApB;AACH,GAFD,MAEO,IAAI,aAAa,CAAC,SAAD,CAAjB,EAA8B;AACjC,IAAA,SAAS,CAAC,GAAD,CAAT;AACH;AACJ;AAiBD,OAAM,SAAU,UAAV,CACF,eADE,EAEF,YAFE,EAGF,OAHE,EAGkC;AAEpC,MAAI,WAAW,CAAI,OAAJ,CAAf,EAA6B;AACzB,IAAA,eAAe,CAAC,YAAD,CAAf,GAAgC,OAAhC;AACA,WAAO,OAAP;AACH;;AACD,SAAO,UAAC,GAAD,EAAc;AACjB,IAAA,eAAe,CAAC,YAAD,CAAf,GAAgC,GAAhC;;AACA,QAAI,aAAa,CAAC,OAAD,CAAjB,EAA4B;AACxB,MAAA,OAAO,CAAC,GAAD,CAAP;AACH;AACJ,GALD;AAMH","sourceRoot":"","sourcesContent":["/*\n * Copyright 2020 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function isRefObject(value) {\n    return value != null && typeof value.current !== \"undefined\";\n}\nexport function isRefCallback(value) {\n    return typeof value === \"function\";\n}\nexport function combineRefs(ref1, ref2) {\n    return mergeRefs(ref1, ref2);\n}\nexport function mergeRefs() {\n    var refs = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        refs[_i] = arguments[_i];\n    }\n    return function (value) {\n        refs.forEach(function (ref) {\n            if (isRefCallback(ref)) {\n                ref(value);\n            }\n            else if (isRefObject(ref)) {\n                ref.current = value;\n            }\n        });\n    };\n}\nexport function getRef(ref) {\n    var _a;\n    if (ref === null) {\n        return null;\n    }\n    return (_a = ref.current) !== null && _a !== void 0 ? _a : ref;\n}\n/**\n * Assign the given ref to a target, either a React ref object or a callback which takes the ref as its first argument.\n */\nexport function setRef(refTarget, ref) {\n    if (refTarget === undefined) {\n        return;\n    }\n    if (isRefObject(refTarget)) {\n        refTarget.current = ref;\n    }\n    else if (isRefCallback(refTarget)) {\n        refTarget(ref);\n    }\n}\nexport function refHandler(refTargetParent, refTargetKey, refProp) {\n    if (isRefObject(refProp)) {\n        refTargetParent[refTargetKey] = refProp;\n        return refProp;\n    }\n    return function (ref) {\n        refTargetParent[refTargetKey] = ref;\n        if (isRefCallback(refProp)) {\n            refProp(ref);\n        }\n    };\n}\n//# sourceMappingURL=refs.js.map"]},"metadata":{},"sourceType":"module"}