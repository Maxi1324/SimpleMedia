{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\"; // TODO: write tests (ignoring for now to get a build passing quickly)\n\n/* istanbul ignore next */\n\nvar FileInput =\n/** @class */\nfunction (_super) {\n  __extends(FileInput, _super);\n\n  function FileInput() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.handleInputChange = function (e) {\n      var _a, _b, _c, _d;\n\n      (_b = (_a = _this.props).onInputChange) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n      (_d = (_c = _this.props.inputProps) === null || _c === void 0 ? void 0 : _c.onChange) === null || _d === void 0 ? void 0 : _d.call(_c, e);\n    };\n\n    return _this;\n  }\n\n  FileInput.prototype.render = function () {\n    var _a, _b, _c;\n\n    var _d = this.props,\n        buttonText = _d.buttonText,\n        className = _d.className,\n        disabled = _d.disabled,\n        fill = _d.fill,\n        hasSelection = _d.hasSelection,\n        inputProps = _d.inputProps,\n        large = _d.large,\n        onInputChange = _d.onInputChange,\n        text = _d.text,\n        htmlProps = __rest(_d, [\"buttonText\", \"className\", \"disabled\", \"fill\", \"hasSelection\", \"inputProps\", \"large\", \"onInputChange\", \"text\"]);\n\n    var rootClasses = classNames(Classes.FILE_INPUT, (_a = {}, _a[Classes.FILE_INPUT_HAS_SELECTION] = hasSelection, _a[Classes.DISABLED] = disabled, _a[Classes.FILL] = fill, _a[Classes.LARGE] = large, _a), className);\n    var NS = Classes.getClassNamespace();\n    var uploadProps = (_b = {}, _b[NS + \"-button-text\"] = buttonText, _b.className = classNames(Classes.FILE_UPLOAD_INPUT, (_c = {}, _c[Classes.FILE_UPLOAD_INPUT_CUSTOM_TEXT] = !!buttonText, _c)), _b);\n    return React.createElement(\"label\", __assign({}, htmlProps, {\n      className: rootClasses\n    }), React.createElement(\"input\", __assign({}, inputProps, {\n      onChange: this.handleInputChange,\n      type: \"file\",\n      disabled: disabled\n    })), React.createElement(\"span\", __assign({}, uploadProps), text));\n  };\n\n  FileInput.displayName = DISPLAYNAME_PREFIX + \".FileInput\";\n  FileInput.defaultProps = {\n    hasSelection: false,\n    inputProps: {},\n    text: \"Choose file...\"\n  };\n  FileInput = __decorate([polyfill], FileInput);\n  return FileInput;\n}(AbstractPureComponent2);\n\nexport { FileInput };","map":{"version":3,"sources":["../../../../src/components/forms/fileInput.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n// TODO: write tests (ignoring for now to get a build passing quickly)\n/* istanbul ignore next */\nvar FileInput = /** @class */ (function (_super) {\n    __extends(FileInput, _super);\n    function FileInput() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleInputChange = function (e) {\n            var _a, _b, _c, _d;\n            (_b = (_a = _this.props).onInputChange) === null || _b === void 0 ? void 0 : _b.call(_a, e);\n            (_d = (_c = _this.props.inputProps) === null || _c === void 0 ? void 0 : _c.onChange) === null || _d === void 0 ? void 0 : _d.call(_c, e);\n        };\n        return _this;\n    }\n    FileInput.prototype.render = function () {\n        var _a, _b, _c;\n        var _d = this.props, buttonText = _d.buttonText, className = _d.className, disabled = _d.disabled, fill = _d.fill, hasSelection = _d.hasSelection, inputProps = _d.inputProps, large = _d.large, onInputChange = _d.onInputChange, text = _d.text, htmlProps = __rest(_d, [\"buttonText\", \"className\", \"disabled\", \"fill\", \"hasSelection\", \"inputProps\", \"large\", \"onInputChange\", \"text\"]);\n        var rootClasses = classNames(Classes.FILE_INPUT, (_a = {},\n            _a[Classes.FILE_INPUT_HAS_SELECTION] = hasSelection,\n            _a[Classes.DISABLED] = disabled,\n            _a[Classes.FILL] = fill,\n            _a[Classes.LARGE] = large,\n            _a), className);\n        var NS = Classes.getClassNamespace();\n        var uploadProps = (_b = {},\n            _b[NS + \"-button-text\"] = buttonText,\n            _b.className = classNames(Classes.FILE_UPLOAD_INPUT, (_c = {},\n                _c[Classes.FILE_UPLOAD_INPUT_CUSTOM_TEXT] = !!buttonText,\n                _c)),\n            _b);\n        return (React.createElement(\"label\", __assign({}, htmlProps, { className: rootClasses }),\n            React.createElement(\"input\", __assign({}, inputProps, { onChange: this.handleInputChange, type: \"file\", disabled: disabled })),\n            React.createElement(\"span\", __assign({}, uploadProps), text)));\n    };\n    FileInput.displayName = DISPLAYNAME_PREFIX + \".FileInput\";\n    FileInput.defaultProps = {\n        hasSelection: false,\n        inputProps: {},\n        text: \"Choose file...\",\n    };\n    FileInput = __decorate([\n        polyfill\n    ], FileInput);\n    return FileInput;\n}(AbstractPureComponent2));\nexport { FileInput };\n//# sourceMappingURL=fileInput.js.map"]},"metadata":{},"sourceType":"module"}