{"ast":null,"code":"/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\"; // this component is simple enough that tests would be purely tautological.\n\n/* istanbul ignore next */\n\nvar HTMLTable =\n/** @class */\nfunction (_super) {\n  __extends(HTMLTable, _super);\n\n  function HTMLTable() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  HTMLTable.prototype.render = function () {\n    var _a; // eslint-disable-next-line deprecation/deprecation\n\n\n    var _b = this.props,\n        bordered = _b.bordered,\n        className = _b.className,\n        condensed = _b.condensed,\n        elementRef = _b.elementRef,\n        interactive = _b.interactive,\n        small = _b.small,\n        striped = _b.striped,\n        htmlProps = __rest(_b, [\"bordered\", \"className\", \"condensed\", \"elementRef\", \"interactive\", \"small\", \"striped\"]);\n\n    var classes = classNames(Classes.HTML_TABLE, (_a = {}, _a[Classes.HTML_TABLE_BORDERED] = bordered, _a[Classes.HTML_TABLE_CONDENSED] = condensed, _a[Classes.HTML_TABLE_STRIPED] = striped, _a[Classes.INTERACTIVE] = interactive, _a[Classes.SMALL] = small, _a), className); // eslint-disable-next-line @blueprintjs/html-components\n\n    return React.createElement(\"table\", __assign({}, htmlProps, {\n      ref: elementRef,\n      className: classes\n    }));\n  };\n\n  HTMLTable = __decorate([polyfill], HTMLTable);\n  return HTMLTable;\n}(AbstractPureComponent2);\n\nexport { HTMLTable };","map":{"version":3,"sources":["../../../../src/components/html-table/htmlTable.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SAAS,sBAAT,EAAiC,OAAjC,QAAkE,cAAlE,C,CAyBA;;AACA;;AAEA,IAAA,SAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA+B,EAAA,SAAA,CAAA,SAAA,EAAA,MAAA,CAAA;;AAA/B,WAAA,SAAA,GAAA;;AAkBC;;AAjBU,EAAA,SAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;WAAA,CACI;;;AACA,QAAM,EAAA,GAA4F,KAAK,KAAvG;AAAA,QAAQ,QAAQ,GAAA,EAAA,CAAA,QAAhB;AAAA,QAAkB,SAAS,GAAA,EAAA,CAAA,SAA3B;AAAA,QAA6B,SAAS,GAAA,EAAA,CAAA,SAAtC;AAAA,QAAwC,UAAU,GAAA,EAAA,CAAA,UAAlD;AAAA,QAAoD,WAAW,GAAA,EAAA,CAAA,WAA/D;AAAA,QAAiE,KAAK,GAAA,EAAA,CAAA,KAAtE;AAAA,QAAwE,OAAO,GAAA,EAAA,CAAA,OAA/E;AAAA,QAAoF,SAAS,GAAA,MAAA,CAAA,EAAA,EAAvF,CAAA,UAAA,EAAA,WAAA,EAAA,WAAA,EAAA,YAAA,EAAA,aAAA,EAAA,OAAA,EAAA,SAAA,CAAuF,CAA7F;;AACA,QAAM,OAAO,GAAG,UAAU,CACtB,OAAO,CAAC,UADc,GACJ,EAAA,GAAA,EAAA,EAEd,EAAA,CAAC,OAAO,CAAC,mBAAT,CAAA,GAA+B,QAFjB,EAGd,EAAA,CAAC,OAAO,CAAC,oBAAT,CAAA,GAAgC,SAHlB,EAId,EAAA,CAAC,OAAO,CAAC,kBAAT,CAAA,GAA8B,OAJhB,EAKd,EAAA,CAAC,OAAO,CAAC,WAAT,CAAA,GAAuB,WALT,EAMd,EAAA,CAAC,OAAO,CAAC,KAAT,CAAA,GAAiB,KANH,E,EADI,GAStB,SATsB,CAA1B,CAHJ,CAcI;;AACA,WAAO,KAAA,CAAA,aAAA,CAAA,OAAA,EAAA,QAAA,CAAA,EAAA,EAAW,SAAX,EAAoB;AAAE,MAAA,GAAG,EAAE,UAAP;AAAmB,MAAA,SAAS,EAAE;AAA9B,KAApB,CAAA,CAAP;AACH,GAhBM;;AADE,EAAA,SAAS,GAAA,UAAA,CAAA,CADrB,QACqB,CAAA,EAAT,SAAS,CAAT;AAkBb,SAAA,SAAA;AAAC,CAlBD,CAA+B,sBAA/B,CAAA;;SAAa,S","sourceRoot":"","sourcesContent":["/*\n * Copyright 2018 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\nvar HTMLTable = /** @class */ (function (_super) {\n    __extends(HTMLTable, _super);\n    function HTMLTable() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    HTMLTable.prototype.render = function () {\n        var _a;\n        // eslint-disable-next-line deprecation/deprecation\n        var _b = this.props, bordered = _b.bordered, className = _b.className, condensed = _b.condensed, elementRef = _b.elementRef, interactive = _b.interactive, small = _b.small, striped = _b.striped, htmlProps = __rest(_b, [\"bordered\", \"className\", \"condensed\", \"elementRef\", \"interactive\", \"small\", \"striped\"]);\n        var classes = classNames(Classes.HTML_TABLE, (_a = {},\n            _a[Classes.HTML_TABLE_BORDERED] = bordered,\n            _a[Classes.HTML_TABLE_CONDENSED] = condensed,\n            _a[Classes.HTML_TABLE_STRIPED] = striped,\n            _a[Classes.INTERACTIVE] = interactive,\n            _a[Classes.SMALL] = small,\n            _a), className);\n        // eslint-disable-next-line @blueprintjs/html-components\n        return React.createElement(\"table\", __assign({}, htmlProps, { ref: elementRef, className: classes }));\n    };\n    HTMLTable = __decorate([\n        polyfill\n    ], HTMLTable);\n    return HTMLTable;\n}(AbstractPureComponent2));\nexport { HTMLTable };\n//# sourceMappingURL=htmlTable.js.map"]},"metadata":{},"sourceType":"module"}