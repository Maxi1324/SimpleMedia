{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as Classes from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isFunction } from \"../../common/utils\";\nimport { TreeNode } from \"./treeNode\"; // eslint-disable-next-line @typescript-eslint/ban-types\n\nvar Tree =\n/** @class */\nfunction (_super) {\n  __extends(Tree, _super);\n\n  function Tree() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.nodeRefs = {};\n\n    _this.handleNodeCollapse = function (node, e) {\n      _this.handlerHelper(_this.props.onNodeCollapse, node, e);\n    };\n\n    _this.handleNodeClick = function (node, e) {\n      _this.handlerHelper(_this.props.onNodeClick, node, e);\n    };\n\n    _this.handleContentRef = function (node, element) {\n      if (element != null) {\n        _this.nodeRefs[node.props.id] = element;\n      } else {\n        // don't want our object to get bloated with old keys\n        delete _this.nodeRefs[node.props.id];\n      }\n    };\n\n    _this.handleNodeContextMenu = function (node, e) {\n      _this.handlerHelper(_this.props.onNodeContextMenu, node, e);\n    };\n\n    _this.handleNodeDoubleClick = function (node, e) {\n      _this.handlerHelper(_this.props.onNodeDoubleClick, node, e);\n    };\n\n    _this.handleNodeExpand = function (node, e) {\n      _this.handlerHelper(_this.props.onNodeExpand, node, e);\n    };\n\n    _this.handleNodeMouseEnter = function (node, e) {\n      _this.handlerHelper(_this.props.onNodeMouseEnter, node, e);\n    };\n\n    _this.handleNodeMouseLeave = function (node, e) {\n      _this.handlerHelper(_this.props.onNodeMouseLeave, node, e);\n    };\n\n    return _this;\n  }\n\n  Tree.ofType = function () {\n    return Tree;\n  };\n\n  Tree.nodeFromPath = function (path, treeNodes) {\n    if (path.length === 1) {\n      return treeNodes[path[0]];\n    } else {\n      return Tree.nodeFromPath(path.slice(1), treeNodes[path[0]].childNodes);\n    }\n  };\n\n  Tree.prototype.render = function () {\n    return React.createElement(\"div\", {\n      className: classNames(Classes.TREE, Classes.FIXED_POSITIONING_CONTAINING_BLOCK, this.props.className)\n    }, this.renderNodes(this.props.contents, [], Classes.TREE_ROOT));\n  };\n  /**\n   * Returns the underlying HTML element of the `Tree` node with an id of `nodeId`.\n   * This element does not contain the children of the node, only its label and controls.\n   * If the node is not currently mounted, `undefined` is returned.\n   */\n\n\n  Tree.prototype.getNodeContentElement = function (nodeId) {\n    return this.nodeRefs[nodeId];\n  };\n\n  Tree.prototype.renderNodes = function (treeNodes, currentPath, className) {\n    var _this = this;\n\n    if (treeNodes == null) {\n      return null;\n    }\n\n    var nodeItems = treeNodes.map(function (node, i) {\n      var elementPath = currentPath.concat(i);\n      var TypedTreeNode = TreeNode.ofType();\n      return React.createElement(TypedTreeNode, __assign({}, node, {\n        key: node.id,\n        contentRef: _this.handleContentRef,\n        depth: elementPath.length - 1,\n        onClick: _this.handleNodeClick,\n        onContextMenu: _this.handleNodeContextMenu,\n        onCollapse: _this.handleNodeCollapse,\n        onDoubleClick: _this.handleNodeDoubleClick,\n        onExpand: _this.handleNodeExpand,\n        onMouseEnter: _this.handleNodeMouseEnter,\n        onMouseLeave: _this.handleNodeMouseLeave,\n        path: elementPath\n      }), _this.renderNodes(node.childNodes, elementPath));\n    });\n    return React.createElement(\"ul\", {\n      className: classNames(Classes.TREE_NODE_LIST, className)\n    }, nodeItems);\n  };\n\n  Tree.prototype.handlerHelper = function (handlerFromProps, node, e) {\n    if (isFunction(handlerFromProps)) {\n      var nodeData = Tree.nodeFromPath(node.props.path, this.props.contents);\n      handlerFromProps(nodeData, node.props.path, e);\n    }\n  };\n\n  Tree.displayName = DISPLAYNAME_PREFIX + \".Tree\";\n  return Tree;\n}(React.Component);\n\nexport { Tree };","map":{"version":3,"sources":["../../../../src/components/tree/tree.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport * as Classes from \"../../common/classes\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isFunction } from \"../../common/utils\";\nimport { TreeNode } from \"./treeNode\";\n// eslint-disable-next-line @typescript-eslint/ban-types\nvar Tree = /** @class */ (function (_super) {\n    __extends(Tree, _super);\n    function Tree() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.nodeRefs = {};\n        _this.handleNodeCollapse = function (node, e) {\n            _this.handlerHelper(_this.props.onNodeCollapse, node, e);\n        };\n        _this.handleNodeClick = function (node, e) {\n            _this.handlerHelper(_this.props.onNodeClick, node, e);\n        };\n        _this.handleContentRef = function (node, element) {\n            if (element != null) {\n                _this.nodeRefs[node.props.id] = element;\n            }\n            else {\n                // don't want our object to get bloated with old keys\n                delete _this.nodeRefs[node.props.id];\n            }\n        };\n        _this.handleNodeContextMenu = function (node, e) {\n            _this.handlerHelper(_this.props.onNodeContextMenu, node, e);\n        };\n        _this.handleNodeDoubleClick = function (node, e) {\n            _this.handlerHelper(_this.props.onNodeDoubleClick, node, e);\n        };\n        _this.handleNodeExpand = function (node, e) {\n            _this.handlerHelper(_this.props.onNodeExpand, node, e);\n        };\n        _this.handleNodeMouseEnter = function (node, e) {\n            _this.handlerHelper(_this.props.onNodeMouseEnter, node, e);\n        };\n        _this.handleNodeMouseLeave = function (node, e) {\n            _this.handlerHelper(_this.props.onNodeMouseLeave, node, e);\n        };\n        return _this;\n    }\n    Tree.ofType = function () {\n        return Tree;\n    };\n    Tree.nodeFromPath = function (path, treeNodes) {\n        if (path.length === 1) {\n            return treeNodes[path[0]];\n        }\n        else {\n            return Tree.nodeFromPath(path.slice(1), treeNodes[path[0]].childNodes);\n        }\n    };\n    Tree.prototype.render = function () {\n        return (React.createElement(\"div\", { className: classNames(Classes.TREE, Classes.FIXED_POSITIONING_CONTAINING_BLOCK, this.props.className) }, this.renderNodes(this.props.contents, [], Classes.TREE_ROOT)));\n    };\n    /**\n     * Returns the underlying HTML element of the `Tree` node with an id of `nodeId`.\n     * This element does not contain the children of the node, only its label and controls.\n     * If the node is not currently mounted, `undefined` is returned.\n     */\n    Tree.prototype.getNodeContentElement = function (nodeId) {\n        return this.nodeRefs[nodeId];\n    };\n    Tree.prototype.renderNodes = function (treeNodes, currentPath, className) {\n        var _this = this;\n        if (treeNodes == null) {\n            return null;\n        }\n        var nodeItems = treeNodes.map(function (node, i) {\n            var elementPath = currentPath.concat(i);\n            var TypedTreeNode = TreeNode.ofType();\n            return (React.createElement(TypedTreeNode, __assign({}, node, { key: node.id, contentRef: _this.handleContentRef, depth: elementPath.length - 1, onClick: _this.handleNodeClick, onContextMenu: _this.handleNodeContextMenu, onCollapse: _this.handleNodeCollapse, onDoubleClick: _this.handleNodeDoubleClick, onExpand: _this.handleNodeExpand, onMouseEnter: _this.handleNodeMouseEnter, onMouseLeave: _this.handleNodeMouseLeave, path: elementPath }), _this.renderNodes(node.childNodes, elementPath)));\n        });\n        return React.createElement(\"ul\", { className: classNames(Classes.TREE_NODE_LIST, className) }, nodeItems);\n    };\n    Tree.prototype.handlerHelper = function (handlerFromProps, node, e) {\n        if (isFunction(handlerFromProps)) {\n            var nodeData = Tree.nodeFromPath(node.props.path, this.props.contents);\n            handlerFromProps(nodeData, node.props.path, e);\n        }\n    };\n    Tree.displayName = DISPLAYNAME_PREFIX + \".Tree\";\n    return Tree;\n}(React.Component));\nexport { Tree };\n//# sourceMappingURL=tree.js.map"]},"metadata":{},"sourceType":"module"}