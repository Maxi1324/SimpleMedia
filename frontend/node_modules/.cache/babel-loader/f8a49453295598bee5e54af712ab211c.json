{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\"; // this component is simple enough that tests would be purely tautological.\n\n/* istanbul ignore next */\n\nvar ButtonGroup =\n/** @class */\nfunction (_super) {\n  __extends(ButtonGroup, _super);\n\n  function ButtonGroup() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ButtonGroup.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        alignText = _b.alignText,\n        className = _b.className,\n        fill = _b.fill,\n        minimal = _b.minimal,\n        large = _b.large,\n        vertical = _b.vertical,\n        htmlProps = __rest(_b, [\"alignText\", \"className\", \"fill\", \"minimal\", \"large\", \"vertical\"]);\n\n    var buttonGroupClasses = classNames(Classes.BUTTON_GROUP, (_a = {}, _a[Classes.FILL] = fill, _a[Classes.LARGE] = large, _a[Classes.MINIMAL] = minimal, _a[Classes.VERTICAL] = vertical, _a), Classes.alignmentClass(alignText), className);\n    return React.createElement(\"div\", __assign({}, htmlProps, {\n      className: buttonGroupClasses\n    }), this.props.children);\n  };\n\n  ButtonGroup.displayName = DISPLAYNAME_PREFIX + \".ButtonGroup\";\n  ButtonGroup = __decorate([polyfill], ButtonGroup);\n  return ButtonGroup;\n}(AbstractPureComponent2);\n\nexport { ButtonGroup };","map":{"version":3,"sources":["../../../../src/components/button/buttonGroup.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SAAS,sBAAT,EAA4C,OAA5C,QAA2D,cAA3D;AACA,SAAS,kBAAT,QAAyD,oBAAzD,C,CAwCA;;AACA;;AAEA,IAAA,WAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAiC,EAAA,SAAA,CAAA,WAAA,EAAA,MAAA,CAAA;;AAAjC,WAAA,WAAA,GAAA;;AAsBC;;AAnBU,EAAA,WAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;;;AACI,QAAM,EAAA,GAAyE,KAAK,KAApF;AAAA,QAAQ,SAAS,GAAA,EAAA,CAAA,SAAjB;AAAA,QAAmB,SAAS,GAAA,EAAA,CAAA,SAA5B;AAAA,QAA8B,IAAI,GAAA,EAAA,CAAA,IAAlC;AAAA,QAAoC,OAAO,GAAA,EAAA,CAAA,OAA3C;AAAA,QAA6C,KAAK,GAAA,EAAA,CAAA,KAAlD;AAAA,QAAoD,QAAQ,GAAA,EAAA,CAAA,QAA5D;AAAA,QAAiE,SAAS,GAAA,MAAA,CAAA,EAAA,EAApE,CAAA,WAAA,EAAA,WAAA,EAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAAA,UAAA,CAAoE,CAA1E;;AACA,QAAM,kBAAkB,GAAG,UAAU,CACjC,OAAO,CAAC,YADyB,GACb,EAAA,GAAA,EAAA,EAEhB,EAAA,CAAC,OAAO,CAAC,IAAT,CAAA,GAAgB,IAFA,EAGhB,EAAA,CAAC,OAAO,CAAC,KAAT,CAAA,GAAiB,KAHD,EAIhB,EAAA,CAAC,OAAO,CAAC,OAAT,CAAA,GAAmB,OAJH,EAKhB,EAAA,CAAC,OAAO,CAAC,QAAT,CAAA,GAAoB,QALJ,E,EADa,GAQjC,OAAO,CAAC,cAAR,CAAuB,SAAvB,CARiC,EASjC,SATiC,CAArC;AAWA,WACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAS,SAAT,EAAkB;AAAE,MAAA,SAAS,EAAE;AAAb,KAAlB,CAAA,EACK,KAAK,KAAL,CAAW,QADhB,CADJ;AAKH,GAlBM;;AAFO,EAAA,WAAA,CAAA,WAAA,GAAiB,kBAAkB,GAAA,cAAnC;AADL,EAAA,WAAW,GAAA,UAAA,CAAA,CADvB,QACuB,CAAA,EAAX,WAAW,CAAX;AAsBb,SAAA,WAAA;AAAC,CAtBD,CAAiC,sBAAjC,CAAA;;SAAa,W","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\nvar ButtonGroup = /** @class */ (function (_super) {\n    __extends(ButtonGroup, _super);\n    function ButtonGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ButtonGroup.prototype.render = function () {\n        var _a;\n        var _b = this.props, alignText = _b.alignText, className = _b.className, fill = _b.fill, minimal = _b.minimal, large = _b.large, vertical = _b.vertical, htmlProps = __rest(_b, [\"alignText\", \"className\", \"fill\", \"minimal\", \"large\", \"vertical\"]);\n        var buttonGroupClasses = classNames(Classes.BUTTON_GROUP, (_a = {},\n            _a[Classes.FILL] = fill,\n            _a[Classes.LARGE] = large,\n            _a[Classes.MINIMAL] = minimal,\n            _a[Classes.VERTICAL] = vertical,\n            _a), Classes.alignmentClass(alignText), className);\n        return (React.createElement(\"div\", __assign({}, htmlProps, { className: buttonGroupClasses }), this.props.children));\n    };\n    ButtonGroup.displayName = DISPLAYNAME_PREFIX + \".ButtonGroup\";\n    ButtonGroup = __decorate([\n        polyfill\n    ], ButtonGroup);\n    return ButtonGroup;\n}(AbstractPureComponent2));\nexport { ButtonGroup };\n//# sourceMappingURL=buttonGroup.js.map"]},"metadata":{},"sourceType":"module"}