{"ast":null,"code":"/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Boundary } from \"../../common/boundary\";\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport { Position } from \"../../common/position\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isElementOfType } from \"../../common/utils\";\nimport { Menu } from \"../menu/menu\";\nimport { MenuItem } from \"../menu/menuItem\";\nimport { Popover } from \"../popover/popover\";\n/** @deprecated use `<OverflowList>` for automatic overflow based on available space. */\n\nvar CollapsibleList =\n/** @class */\nfunction (_super) {\n  __extends(CollapsibleList, _super);\n\n  function CollapsibleList() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  CollapsibleList.prototype.render = function () {\n    var _this = this;\n\n    var collapseFrom = this.props.collapseFrom;\n    var childrenLength = React.Children.count(this.props.children);\n\n    var _a = this.partitionChildren(),\n        visibleChildren = _a[0],\n        collapsedChildren = _a[1];\n\n    var visibleItems = visibleChildren.map(function (child, index) {\n      var absoluteIndex = collapseFrom === Boundary.START ? childrenLength - 1 - index : index;\n      return React.createElement(\"li\", {\n        className: _this.props.visibleItemClassName,\n        key: absoluteIndex\n      }, _this.props.visibleItemRenderer(child.props, absoluteIndex));\n    });\n\n    if (collapseFrom === Boundary.START) {\n      // reverse START list so separators appear before items\n      visibleItems.reverse();\n    } // construct dropdown menu for collapsed items\n\n\n    var collapsedPopover;\n\n    if (collapsedChildren.length > 0) {\n      var position = collapseFrom === Boundary.END ? Position.BOTTOM_RIGHT : Position.BOTTOM_LEFT;\n      /* eslint-disable deprecation/deprecation */\n\n      collapsedPopover = React.createElement(\"li\", {\n        className: this.props.visibleItemClassName\n      }, React.createElement(Popover, __assign({\n        content: React.createElement(Menu, null, collapsedChildren),\n        position: position\n      }, this.props.dropdownProps), this.props.dropdownTarget));\n      /* eslint-enable deprecation/deprecation */\n    }\n\n    return React.createElement(\"ul\", {\n      className: classNames(Classes.COLLAPSIBLE_LIST, this.props.className)\n    }, collapseFrom === Boundary.START ? collapsedPopover : null, visibleItems, collapseFrom === Boundary.END ? collapsedPopover : null);\n  }; // splits the list of children into two arrays: visible and collapsed\n\n\n  CollapsibleList.prototype.partitionChildren = function () {\n    var childrenArray = React.Children.map(this.props.children, function (child, index) {\n      if (!isElementOfType(child, MenuItem)) {\n        throw new Error(Errors.COLLAPSIBLE_LIST_INVALID_CHILD);\n      }\n\n      return React.cloneElement(child, {\n        key: \"visible-\" + index\n      });\n    });\n\n    if (childrenArray == null) {\n      return [[], []];\n    }\n\n    if (this.props.collapseFrom === Boundary.START) {\n      // reverse START list so we can always slice visible items from the front of the list\n      childrenArray.reverse();\n    }\n\n    var visibleItemCount = this.props.visibleItemCount;\n    return [childrenArray.slice(0, visibleItemCount), childrenArray.slice(visibleItemCount)];\n  };\n\n  CollapsibleList.displayName = DISPLAYNAME_PREFIX + \".CollapsibleList\";\n  CollapsibleList.defaultProps = {\n    collapseFrom: Boundary.START,\n    visibleItemCount: 3\n  };\n  return CollapsibleList;\n}(React.Component);\n\nexport { CollapsibleList };","map":{"version":3,"sources":["../../../../src/components/collapsible-list/collapsibleList.tsx"],"names":[],"mappings":"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","sourceRoot":"","sourcesContent":["/*\n * Copyright 2015 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __extends } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { Boundary } from \"../../common/boundary\";\nimport * as Classes from \"../../common/classes\";\nimport * as Errors from \"../../common/errors\";\nimport { Position } from \"../../common/position\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\nimport { isElementOfType } from \"../../common/utils\";\nimport { Menu } from \"../menu/menu\";\nimport { MenuItem } from \"../menu/menuItem\";\nimport { Popover } from \"../popover/popover\";\n/** @deprecated use `<OverflowList>` for automatic overflow based on available space. */\nvar CollapsibleList = /** @class */ (function (_super) {\n    __extends(CollapsibleList, _super);\n    function CollapsibleList() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    CollapsibleList.prototype.render = function () {\n        var _this = this;\n        var collapseFrom = this.props.collapseFrom;\n        var childrenLength = React.Children.count(this.props.children);\n        var _a = this.partitionChildren(), visibleChildren = _a[0], collapsedChildren = _a[1];\n        var visibleItems = visibleChildren.map(function (child, index) {\n            var absoluteIndex = collapseFrom === Boundary.START ? childrenLength - 1 - index : index;\n            return (React.createElement(\"li\", { className: _this.props.visibleItemClassName, key: absoluteIndex }, _this.props.visibleItemRenderer(child.props, absoluteIndex)));\n        });\n        if (collapseFrom === Boundary.START) {\n            // reverse START list so separators appear before items\n            visibleItems.reverse();\n        }\n        // construct dropdown menu for collapsed items\n        var collapsedPopover;\n        if (collapsedChildren.length > 0) {\n            var position = collapseFrom === Boundary.END ? Position.BOTTOM_RIGHT : Position.BOTTOM_LEFT;\n            /* eslint-disable deprecation/deprecation */\n            collapsedPopover = (React.createElement(\"li\", { className: this.props.visibleItemClassName },\n                React.createElement(Popover, __assign({ content: React.createElement(Menu, null, collapsedChildren), position: position }, this.props.dropdownProps), this.props.dropdownTarget)));\n            /* eslint-enable deprecation/deprecation */\n        }\n        return (React.createElement(\"ul\", { className: classNames(Classes.COLLAPSIBLE_LIST, this.props.className) },\n            collapseFrom === Boundary.START ? collapsedPopover : null,\n            visibleItems,\n            collapseFrom === Boundary.END ? collapsedPopover : null));\n    };\n    // splits the list of children into two arrays: visible and collapsed\n    CollapsibleList.prototype.partitionChildren = function () {\n        var childrenArray = React.Children.map(this.props.children, function (child, index) {\n            if (!isElementOfType(child, MenuItem)) {\n                throw new Error(Errors.COLLAPSIBLE_LIST_INVALID_CHILD);\n            }\n            return React.cloneElement(child, { key: \"visible-\" + index });\n        });\n        if (childrenArray == null) {\n            return [[], []];\n        }\n        if (this.props.collapseFrom === Boundary.START) {\n            // reverse START list so we can always slice visible items from the front of the list\n            childrenArray.reverse();\n        }\n        var visibleItemCount = this.props.visibleItemCount;\n        return [childrenArray.slice(0, visibleItemCount), childrenArray.slice(visibleItemCount)];\n    };\n    CollapsibleList.displayName = DISPLAYNAME_PREFIX + \".CollapsibleList\";\n    CollapsibleList.defaultProps = {\n        collapseFrom: Boundary.START,\n        visibleItemCount: 3,\n    };\n    return CollapsibleList;\n}(React.Component));\nexport { CollapsibleList };\n//# sourceMappingURL=collapsibleList.js.map"]},"metadata":{},"sourceType":"module"}