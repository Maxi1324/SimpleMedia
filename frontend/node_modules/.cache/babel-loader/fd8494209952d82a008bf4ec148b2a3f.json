{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX, Intent } from \"../../common\";\nimport { H4 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\n\nvar Callout =\n/** @class */\nfunction (_super) {\n  __extends(Callout, _super);\n\n  function Callout() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  Callout.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        className = _b.className,\n        children = _b.children,\n        icon = _b.icon,\n        intent = _b.intent,\n        title = _b.title,\n        htmlProps = __rest(_b, [\"className\", \"children\", \"icon\", \"intent\", \"title\"]);\n\n    var iconName = this.getIconName(icon, intent);\n    var classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), (_a = {}, _a[Classes.CALLOUT_ICON] = iconName != null, _a), className);\n    return React.createElement(\"div\", __assign({\n      className: classes\n    }, htmlProps), iconName && React.createElement(Icon, {\n      icon: iconName,\n      iconSize: Icon.SIZE_LARGE\n    }), title && React.createElement(H4, null, title), children);\n  };\n\n  Callout.prototype.getIconName = function (icon, intent) {\n    // 1. no icon\n    if (icon === null) {\n      return undefined;\n    } // 2. defined iconName prop\n\n\n    if (icon !== undefined) {\n      return icon;\n    } // 3. default intent icon\n\n\n    switch (intent) {\n      case Intent.DANGER:\n        return \"error\";\n\n      case Intent.PRIMARY:\n        return \"info-sign\";\n\n      case Intent.WARNING:\n        return \"warning-sign\";\n\n      case Intent.SUCCESS:\n        return \"tick\";\n\n      default:\n        return undefined;\n    }\n  };\n\n  Callout.displayName = DISPLAYNAME_PREFIX + \".Callout\";\n  Callout = __decorate([polyfill], Callout);\n  return Callout;\n}(AbstractPureComponent2);\n\nexport { Callout };","map":{"version":3,"sources":["../../../../src/components/callout/callout.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SACI,sBADJ,EAEI,OAFJ,EAGI,kBAHJ,EAMI,MANJ,QASO,cATP;AAUA,SAAS,EAAT,QAAmB,cAAnB;AACA,SAAS,IAAT,QAA+B,cAA/B;;AA+BA,IAAA,OAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAA6B,EAAA,SAAA,CAAA,OAAA,EAAA,MAAA,CAAA;;AAA7B,WAAA,OAAA,GAAA;;AA6CC;;AA1CU,EAAA,OAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;;;AACI,QAAM,EAAA,GAA6D,KAAK,KAAxE;AAAA,QAAQ,SAAS,GAAA,EAAA,CAAA,SAAjB;AAAA,QAAmB,QAAQ,GAAA,EAAA,CAAA,QAA3B;AAAA,QAA6B,IAAI,GAAA,EAAA,CAAA,IAAjC;AAAA,QAAmC,MAAM,GAAA,EAAA,CAAA,MAAzC;AAAA,QAA2C,KAAK,GAAA,EAAA,CAAA,KAAhD;AAAA,QAAqD,SAAS,GAAA,MAAA,CAAA,EAAA,EAAxD,CAAA,WAAA,EAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,CAAwD,CAA9D;;AACA,QAAM,QAAQ,GAAG,KAAK,WAAL,CAAiB,IAAjB,EAAuB,MAAvB,CAAjB;AACA,QAAM,OAAO,GAAG,UAAU,CACtB,OAAO,CAAC,OADc,EAEtB,OAAO,CAAC,WAAR,CAAoB,MAApB,CAFsB,GAEK,EAAA,GAAA,EAAA,EACzB,EAAA,CAAC,OAAO,CAAC,YAAT,CAAA,GAAwB,QAAQ,IAAI,IADX,EACe,EAHpB,GAItB,SAJsB,CAA1B;AAOA,WACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA;AAAK,MAAA,SAAS,EAAE;AAAhB,KAAA,EAA6B,SAA7B,CAAA,EACK,QAAQ,IAAI,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,MAAA,IAAI,EAAE,QAAP;AAAiB,MAAA,QAAQ,EAAE,IAAI,CAAC;AAAhC,KAAL,CADjB,EAEK,KAAK,IAAI,KAAA,CAAA,aAAA,CAAC,EAAD,EAAG,IAAH,EAAK,KAAL,CAFd,EAGK,QAHL,CADJ;AAOH,GAjBM;;AAmBC,EAAA,OAAA,CAAA,SAAA,CAAA,WAAA,GAAR,UAAoB,IAApB,EAAkD,MAAlD,EAAiE;AAC7D;AACA,QAAI,IAAI,KAAK,IAAb,EAAmB;AACf,aAAO,SAAP;AACH,KAJ4D,CAK7D;;;AACA,QAAI,IAAI,KAAK,SAAb,EAAwB;AACpB,aAAO,IAAP;AACH,KAR4D,CAS7D;;;AACA,YAAQ,MAAR;AACI,WAAK,MAAM,CAAC,MAAZ;AACI,eAAO,OAAP;;AACJ,WAAK,MAAM,CAAC,OAAZ;AACI,eAAO,WAAP;;AACJ,WAAK,MAAM,CAAC,OAAZ;AACI,eAAO,cAAP;;AACJ,WAAK,MAAM,CAAC,OAAZ;AACI,eAAO,MAAP;;AACJ;AACI,eAAO,SAAP;AAVR;AAYH,GAtBO;;AArBM,EAAA,OAAA,CAAA,WAAA,GAAiB,kBAAkB,GAAA,UAAnC;AADL,EAAA,OAAO,GAAA,UAAA,CAAA,CADnB,QACmB,CAAA,EAAP,OAAO,CAAP;AA6Cb,SAAA,OAAA;AAAC,CA7CD,CAA6B,sBAA7B,CAAA;;SAAa,O","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes, DISPLAYNAME_PREFIX, Intent, } from \"../../common\";\nimport { H4 } from \"../html/html\";\nimport { Icon } from \"../icon/icon\";\nvar Callout = /** @class */ (function (_super) {\n    __extends(Callout, _super);\n    function Callout() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    Callout.prototype.render = function () {\n        var _a;\n        var _b = this.props, className = _b.className, children = _b.children, icon = _b.icon, intent = _b.intent, title = _b.title, htmlProps = __rest(_b, [\"className\", \"children\", \"icon\", \"intent\", \"title\"]);\n        var iconName = this.getIconName(icon, intent);\n        var classes = classNames(Classes.CALLOUT, Classes.intentClass(intent), (_a = {}, _a[Classes.CALLOUT_ICON] = iconName != null, _a), className);\n        return (React.createElement(\"div\", __assign({ className: classes }, htmlProps),\n            iconName && React.createElement(Icon, { icon: iconName, iconSize: Icon.SIZE_LARGE }),\n            title && React.createElement(H4, null, title),\n            children));\n    };\n    Callout.prototype.getIconName = function (icon, intent) {\n        // 1. no icon\n        if (icon === null) {\n            return undefined;\n        }\n        // 2. defined iconName prop\n        if (icon !== undefined) {\n            return icon;\n        }\n        // 3. default intent icon\n        switch (intent) {\n            case Intent.DANGER:\n                return \"error\";\n            case Intent.PRIMARY:\n                return \"info-sign\";\n            case Intent.WARNING:\n                return \"warning-sign\";\n            case Intent.SUCCESS:\n                return \"tick\";\n            default:\n                return undefined;\n        }\n    };\n    Callout.displayName = DISPLAYNAME_PREFIX + \".Callout\";\n    Callout = __decorate([\n        polyfill\n    ], Callout);\n    return Callout;\n}(AbstractPureComponent2));\nexport { Callout };\n//# sourceMappingURL=callout.js.map"]},"metadata":{},"sourceType":"module"}