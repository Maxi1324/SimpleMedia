{"ast":null,"code":"/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\"; // this component is simple enough that tests would be purely tautological.\n\n/* istanbul ignore next */\n\nvar ControlGroup =\n/** @class */\nfunction (_super) {\n  __extends(ControlGroup, _super);\n\n  function ControlGroup() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  }\n\n  ControlGroup.prototype.render = function () {\n    var _a;\n\n    var _b = this.props,\n        children = _b.children,\n        className = _b.className,\n        fill = _b.fill,\n        vertical = _b.vertical,\n        htmlProps = __rest(_b, [\"children\", \"className\", \"fill\", \"vertical\"]);\n\n    var rootClasses = classNames(Classes.CONTROL_GROUP, (_a = {}, _a[Classes.FILL] = fill, _a[Classes.VERTICAL] = vertical, _a), className);\n    return React.createElement(\"div\", __assign({}, htmlProps, {\n      className: rootClasses\n    }), children);\n  };\n\n  ControlGroup.displayName = DISPLAYNAME_PREFIX + \".ControlGroup\";\n  ControlGroup = __decorate([polyfill], ControlGroup);\n  return ControlGroup;\n}(AbstractPureComponent2);\n\nexport { ControlGroup };","map":{"version":3,"sources":["../../../../src/components/forms/controlGroup.tsx"],"names":[],"mappings":"AAAA;;;;;;;;;;;;;;AAcG;;AAEH,OAAO,UAAP,MAAuB,YAAvB;AACA,OAAO,KAAK,KAAZ,MAAuB,OAAvB;AACA,SAAS,QAAT,QAAyB,yBAAzB;AAEA,SAAS,sBAAT,EAAiC,OAAjC,QAAgD,cAAhD;AACA,SAAS,kBAAT,QAAyD,oBAAzD,C,CAkBA;;AACA;;AAEA,IAAA,YAAA;AAAA;AAAA,UAAA,MAAA,EAAA;AAAkC,EAAA,SAAA,CAAA,YAAA,EAAA,MAAA,CAAA;;AAAlC,WAAA,YAAA,GAAA;;AAqBC;;AAlBU,EAAA,YAAA,CAAA,SAAA,CAAA,MAAA,GAAP,YAAA;;;AACI,QAAM,EAAA,GAAwD,KAAK,KAAnE;AAAA,QAAQ,QAAQ,GAAA,EAAA,CAAA,QAAhB;AAAA,QAAkB,SAAS,GAAA,EAAA,CAAA,SAA3B;AAAA,QAA6B,IAAI,GAAA,EAAA,CAAA,IAAjC;AAAA,QAAmC,QAAQ,GAAA,EAAA,CAAA,QAA3C;AAAA,QAAgD,SAAS,GAAA,MAAA,CAAA,EAAA,EAAnD,CAAA,UAAA,EAAA,WAAA,EAAA,MAAA,EAAA,UAAA,CAAmD,CAAzD;;AAEA,QAAM,WAAW,GAAG,UAAU,CAC1B,OAAO,CAAC,aADkB,GACL,EAAA,GAAA,EAAA,EAEjB,EAAA,CAAC,OAAO,CAAC,IAAT,CAAA,GAAgB,IAFC,EAGjB,EAAA,CAAC,OAAO,CAAC,QAAT,CAAA,GAAoB,QAHH,E,EADK,GAM1B,SAN0B,CAA9B;AASA,WACI,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,QAAA,CAAA,EAAA,EAAS,SAAT,EAAkB;AAAE,MAAA,SAAS,EAAE;AAAb,KAAlB,CAAA,EACK,QADL,CADJ;AAKH,GAjBM;;AAFO,EAAA,YAAA,CAAA,WAAA,GAAiB,kBAAkB,GAAA,eAAnC;AADL,EAAA,YAAY,GAAA,UAAA,CAAA,CADxB,QACwB,CAAA,EAAZ,YAAY,CAAZ;AAqBb,SAAA,YAAA;AAAC,CArBD,CAAkC,sBAAlC,CAAA;;SAAa,Y","sourceRoot":"","sourcesContent":["/*\n * Copyright 2017 Palantir Technologies, Inc. All rights reserved.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { __assign, __decorate, __extends, __rest } from \"tslib\";\nimport classNames from \"classnames\";\nimport * as React from \"react\";\nimport { polyfill } from \"react-lifecycles-compat\";\nimport { AbstractPureComponent2, Classes } from \"../../common\";\nimport { DISPLAYNAME_PREFIX } from \"../../common/props\";\n// this component is simple enough that tests would be purely tautological.\n/* istanbul ignore next */\nvar ControlGroup = /** @class */ (function (_super) {\n    __extends(ControlGroup, _super);\n    function ControlGroup() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ControlGroup.prototype.render = function () {\n        var _a;\n        var _b = this.props, children = _b.children, className = _b.className, fill = _b.fill, vertical = _b.vertical, htmlProps = __rest(_b, [\"children\", \"className\", \"fill\", \"vertical\"]);\n        var rootClasses = classNames(Classes.CONTROL_GROUP, (_a = {},\n            _a[Classes.FILL] = fill,\n            _a[Classes.VERTICAL] = vertical,\n            _a), className);\n        return (React.createElement(\"div\", __assign({}, htmlProps, { className: rootClasses }), children));\n    };\n    ControlGroup.displayName = DISPLAYNAME_PREFIX + \".ControlGroup\";\n    ControlGroup = __decorate([\n        polyfill\n    ], ControlGroup);\n    return ControlGroup;\n}(AbstractPureComponent2));\nexport { ControlGroup };\n//# sourceMappingURL=controlGroup.js.map"]},"metadata":{},"sourceType":"module"}